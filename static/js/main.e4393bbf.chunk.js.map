{"version":3,"sources":["components/timeline.module.css","components/menu.module.css","components/toggle.module.css","components/analogWriteSlider.module.css","components/dial.module.css","dragData.js","components/menu.js","components/moSelector.js","components/console.js","components/toggle.js","components/analogWriteSlider.js","components/analogReadButton.js","components/dial.js","components/uiControls.js","components/timeline.js","components/timelineConfig.js","components/hq.js","App.js","registerServiceWorker.js","index.js","components/analogReadButton.module.css"],"names":["module","exports","graphContainer","menu","container","element","scale","scaleX","type","stacked","initValue","SubMenu","AppMenu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","setState","current","key","props","getChoice","state","react_default","a","createElement","onClick","selectedKeys","mode","theme","className","classes","title","style","color","icon","ItemGroup","Item","href","target","rel","Component","MoSelector","onChange","idx","activeUnit","allUnits","getActiveUnit","originalElement","_this$props","colors","getColors","alt","fontSize","padding","pagination","pageSize","total","length","size","showLessItems","position","bottom","itemRender","bind","React","globalStyle","background","width","height","minHeight","minWidth","contentStyle","inputStyle","top","promptLabelStyle","Console","commands","echo","description","usage","fn","concat","Array","from","arguments","join","man","digitalWrite","pin","val","unitId","terminal","fetch","then","res","json","data","pushToStdout","JSON","stringify","reply","rotate","speed","direction","wait","setTimeout","createRef","Terminal_default","assign","ref","welcomeMessage","promptLabel","Toggle","checked","pinState","console","log","isChecked","es_switch","AnalogWriteSlider","value","slider","vertical","max","defaultValue","AnalogReadButton","_this2","params","es_button","buttonUnit","budge","hiGray","loGray","Dial","getMotiPos","motiPos","steps","isNaN","catch","err","rotations","dialPos","lastDialVal","setInterval","Math","round","rollover","destination","capture","checkRollover","getDialPos","moveIt","prevProps","prevState","incomingVal","_this$state","lastIncomingVal","_this$state2","dialPos360","getRangeValue","motiPos360","_this$props2","radius","topText","subText","dist","changeValue","strokeWidth","stroke","fill","r","x","y","textAnchor","dy","UIcontrols","getCapture","activePointVal","screen","captureIcon","activeColor","indexOf","dialRadius","componentSize","row","justify","align","toggle","analogReadButton","analogWriteSlider","dial","vscreen","onCaptureClick","roundValue","pos","pow","calcPosition","chartInstance","datasetIndex","index","touches","scales","getValueForPixel","clientX","canvas","getBoundingClientRect","left","clientY","options","dragDataRound","min","datasets","dragX","updateData","callback","event","sourceEvent","_datasetIndex","_index","v","rScale","d","sqrt","xCenter","yCenter","scalingFactor","drawingArea","ticks","reverse","calcRadar","update","ChartJSdragDataPlugin","id","afterInit","dragData","select","chart","drag","on","activeLine","getElementsAtEvent","scaleName","config","_xScale","xAxes","newPos","curValue","getElement","onDragStart","onDrag","dragEndCallback","onDragEnd","Chart","pluginService","register","dragDisabled","Timeline","saveDatasets","datasetsToSave","forEach","dataset","objectSpread","toConsumableArray","localStorage","removeItem","setItem","_unused","clearDatasets","numPoints","map","label","pointBackgroundColor","pointRadius","setPointsRadii","pointHitRadius","pointHoverRadius","pointHoverColor","borderColor","borderWidth","chartRef","activePoint","interval","intervalId","play","edit","assertThisInitialized","xLabels","i","toFixed","chartlines","createChartLines","isActiveDataset","_this2$props","refToSetActivePoint","setActivePoint","refToSetActivePointValue","getActivePointVal","chartConfig","labels","backgroundColor","yAxes","scaleLabel","display","labelString","fontColor","stepSize","suggestedMax","suggestedMin","gridLines","animation","duration","legend","boxWidth","responsive","maintainAspectRatio","tooltips","intersect","hover","layout","right","getContext","pause","lock","parse","getItem","activeSetIndex","pointIndex","_this3","ds","unitIndex","_this4","nextActivePoint","clearInterval","_this$props3","makePlay","makeEdit","makeSave","makeClear","inPointVal","pointColors","TimelineConfig","showModal","visible","handleOk","handleCancel","onRef","undefined","saveTrigger","clearTrigger","modal","onOk","onCancel","getSaveTrigger","getClearTrigger","Hq","activeOpacity","inactiveOpacity","areTimelinesPlaying","areTimelinesEditing","topRow","playIcon","editIcon","console_Console","components_uiControls","onEditClick","onPlayClick","timelineConfig","moSelector","defaultUnit","timeline_Timeline","App","page","window","innerHeight","innerWidth","updateDimensions","addEventListener","content","components_hq","components_menu","choice","removeEventListener","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e4393bbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphContainer\":\"timeline_graphContainer__1X6eL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"menu_menu__8vnjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"toggle_container__3VUN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"analogWriteSlider_container__Us8ZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dial_container__1ZnML\"};","import Chart from 'chart.js'\r\nimport { drag } from 'd3-drag'\r\nimport { select, event } from 'd3-selection'\r\n\r\nlet element, scale, scaleX, type, stacked, initValue\r\n\r\nfunction getElement (chartInstance, callback) {\r\n  return () => {\r\n    if (event) {\r\n      const e = event.sourceEvent\r\n      const activeLine = chartInstance.options.activeLine\r\n      element = chartInstance.getElementsAtEvent(e)[activeLine]\r\n    //   element = chartInstance.getElementAtEvent(e)[0]\r\n    //   console.log(\"active line: \" + activeLine);\r\n    //   console.log(element);\r\n      type = chartInstance.config.type\r\n      let scaleName = type === 'radar' ? '_scale' : '_yScale'\r\n      if (element) {\r\n        if (chartInstance.data.datasets[element._datasetIndex].dragData === false || element[scaleName].options.dragData === false) {\r\n          element = null\r\n          return\r\n        }\r\n        \r\n        scale = element[scaleName].id\r\n        if (element._xScale) {\r\n          scaleX = element._xScale.id\r\n        }\r\n        \r\n        if (type === 'bar' || type === 'horizontalBar') {\r\n          stacked = chartInstance.config.options.scales.xAxes[0].stacked\r\n          let data = {}\r\n          let datasetIndex = element._datasetIndex\r\n          let index = element._index\r\n          let newPos = calcPosition(e,chartInstance,datasetIndex,index,data)\r\n          let curValue = chartInstance.data.datasets[datasetIndex].data[index]\r\n          initValue = newPos - curValue\r\n        }\r\n\r\n        if (typeof callback === 'function' && element) {\r\n          if ( callback(e, element) === false) {\r\n            element = null\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction roundValue(value, pos) {\r\n  if (!isNaN(pos)) {\r\n    return Math.round(value * Math.pow(10, pos))/Math.pow(10, pos)\r\n  }\r\n  return value\r\n}\r\n\r\nfunction calcRadar(e,chartInstance) {\r\n  let x,y,v\r\n  if (e.touches) {\r\n    x = e.touches[0].clientX-chartInstance.canvas.getBoundingClientRect().left\r\n    y = e.touches[0].clientY-chartInstance.canvas.getBoundingClientRect().top\r\n  } else {\r\n    x = e.clientX - chartInstance.canvas.getBoundingClientRect().left\r\n    y = e.clientY - chartInstance.canvas.getBoundingClientRect().top\r\n  }\r\n  let rScale = chartInstance.scales[scale]\r\n  let d = Math.sqrt(Math.pow(x-rScale.xCenter, 2) + Math.pow(y-rScale.yCenter, 2))\r\n  let scalingFactor = rScale.drawingArea / (rScale.max - rScale.min)\r\n  if (rScale.options.ticks.reverse) {\r\n    v = rScale.max - (d / scalingFactor)\r\n  } else {\r\n    v = rScale.min + (d / scalingFactor)\r\n  }\r\n\r\n  v = roundValue(v, chartInstance.options.dragDataRound)\r\n\r\n  v = v > chartInstance.scale.max ? chartInstance.scale.max : v\r\n  v = v < chartInstance.scale.min ? chartInstance.scale.min : v\r\n\r\n  return v\r\n}\r\n\r\nfunction calcPosition(e,chartInstance,datasetIndex,index,data) {\r\n  let x,y\r\n  if (e.touches) {\r\n    x = chartInstance.scales[scaleX].getValueForPixel(e.touches[0].clientX-chartInstance.canvas.getBoundingClientRect().left)\r\n    y = chartInstance.scales[scale].getValueForPixel(e.touches[0].clientY-chartInstance.canvas.getBoundingClientRect().top)\r\n  } else {\r\n    x = chartInstance.scales[scaleX].getValueForPixel(e.clientX - chartInstance.canvas.getBoundingClientRect().left)\r\n    y = chartInstance.scales[scale].getValueForPixel(e.clientY - chartInstance.canvas.getBoundingClientRect().top)\r\n  }\r\n\r\n  x = roundValue(x, chartInstance.options.dragDataRound)\r\n  y = roundValue(y, chartInstance.options.dragDataRound)\r\n\r\n  x = x > chartInstance.scales[scaleX].max ? chartInstance.scales[scaleX].max : x\r\n  x = x < chartInstance.scales[scaleX].min ? chartInstance.scales[scaleX].min : x\r\n\r\n  y = y > chartInstance.scales[scale].max ? chartInstance.scales[scale].max : y\r\n  y = y < chartInstance.scales[scale].min ? chartInstance.scales[scale].min : y\r\n\r\n  if(chartInstance.data.datasets[datasetIndex].data[index].x && chartInstance.options.dragX) {\r\n    data.x = x\r\n  }\r\n\r\n  if(chartInstance.data.datasets[datasetIndex].data[index].y) {\r\n    data.y = y\r\n    return data\r\n  } else {\r\n    if (type === 'horizontalBar') {\r\n      return x\r\n    } else {\r\n      return y\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateData (chartInstance, callback) {\r\n  return () => {\r\n    if (element && event) {\r\n      const e = event.sourceEvent\r\n      const datasetIndex = element._datasetIndex\r\n      const index = element._index\r\n      \r\n      let data = chartInstance.data.datasets[datasetIndex].data[index]\r\n\r\n      if (type === 'radar') {\r\n        data = calcRadar(e,chartInstance)\r\n      } else if (stacked) {\r\n        let cursorPos = calcPosition(e,chartInstance,datasetIndex,index,data)\r\n        data = cursorPos - initValue\r\n      } else {\r\n        data = calcPosition(e,chartInstance,datasetIndex,index,data)\r\n      }\r\n\r\n      if (typeof callback === 'function') {\r\n        if ( callback(e, datasetIndex, index, data) !== false) {\r\n          chartInstance.data.datasets[datasetIndex].data[index] = data\r\n          chartInstance.update(0)\r\n        }\r\n      } else {\r\n        chartInstance.data.datasets[datasetIndex].data[index] = data\r\n        chartInstance.update(0)\r\n      }\r\n    }  \r\n  }\r\n}\r\n\r\nfunction dragEndCallback (chartInstance, callback) {\r\n  return () => {\r\n    if (typeof callback === 'function' && element) {\r\n      const e = event.sourceEvent\r\n      const datasetIndex = element._datasetIndex\r\n      const index = element._index\r\n      const value = chartInstance.data.datasets[datasetIndex].data[index]\r\n      return callback(e,datasetIndex,index,value)\r\n    }\r\n  }\r\n}\r\n\r\nconst ChartJSdragDataPlugin = {\r\n  id: 'dragdata',\r\n  afterInit: function(chartInstance) {\r\n    if (chartInstance.options.dragData) {\r\n      select(chartInstance.chart.canvas).call(\r\n        drag().container(chartInstance.chart.canvas)\r\n          .on('start', getElement(chartInstance, chartInstance.options.onDragStart))\r\n          .on('drag', updateData(chartInstance, chartInstance.options.onDrag))\r\n          .on('end', dragEndCallback(chartInstance,chartInstance.options.onDragEnd))\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nChart.pluginService.register(ChartJSdragDataPlugin)\r\n\r\nexport default ChartJSdragDataPlugin","import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport classes from './menu.module.css';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass AppMenu extends Component {\r\n  constructor() {\r\n    super();  \r\n    this.state = {\r\n      current: 'hq',\r\n    };\r\n  }\r\n\r\n  handleClick = e => {\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n    this.props.getChoice(e.key);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\" theme=\"dark\" className={classes.menu} >\r\n\r\n        <SubMenu\r\n          title={\r\n            <span className=\"submenu-title-wrapper\" style={{color: \"rgba(255, 255, 255, 0.6\"}}>\r\n              <Icon type=\"setting\" />\r\n              Mo Controls\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.ItemGroup>\r\n            <Menu.Item key=\"hq\">Unit HQ</Menu.Item>\r\n            {/* <Menu.Item key=\"live\">Live Motion</Menu.Item> */}\r\n            <Menu.Item key=\"about\">          \r\n              <a href=\"http://www.robotstack.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              About\r\n              </a>\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        {/* <Menu.Item key=\"website\">\r\n          <a href=\"http://www.robotstack.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            RobotStack\r\n          </a>\r\n        </Menu.Item> */}\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppMenu;\r\n","import React from 'react';\r\nimport { Pagination } from 'antd';\r\n// import './moSelector.less';\r\n\r\nclass MoSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeUnit: this.props.allUnits[0],\r\n            current: 1\r\n        };\r\n    };\r\n\r\n    itemRender(current, type, originalElement) {\r\n        const {allUnits, getColors} = this.props;\r\n        const {activeUnit} = this.state;\r\n        const idx = current-1;\r\n        const colors = getColors(allUnits, activeUnit, 1, 0.5);\r\n        // const {activeUnit} = this.state;\r\n        // const color = idx === allUnits.indexOf(activeUnit) ? colors[idx] : \"rgba(255, 255, 255, 0.65)\";\r\n        if (type === 'page') {\r\n            return <a alt={allUnits[idx]} style={{ color: colors[idx], fontSize: \".9em\", padding: \"0px\" }}>{allUnits[idx]}</a>\r\n        }\r\n        return originalElement;\r\n    }\r\n\r\n    onChange = (idx) => {\r\n        const {allUnits} = this.props;\r\n        const activeUnit = allUnits[idx-1];\r\n        this.setState({\r\n            activeUnit: activeUnit,\r\n            current: idx,\r\n        });\r\n        this.props.getActiveUnit(activeUnit);\r\n    };\r\n\r\n    render() {\r\n        const { allUnits } = this.props;\r\n        const { current } = this.state;\r\n        return <Pagination \r\n        current={current} \r\n        pageSize={1} \r\n        onChange={this.onChange} \r\n        total={allUnits.length} \r\n        size={this.props.size} \r\n        showLessItems={true}\r\n        // showTitle=\"false\"\r\n        // hideOnSinglePage={true}\r\n        style={{ position: \"relative\", bottom: \"1px\" }}\r\n        itemRender={this.itemRender.bind(this)} />;\r\n    }\r\n}\r\n\r\nexport default MoSelector;\r\n","import React from 'react'\r\nimport Terminal from 'react-console-emulator'\r\n\r\n\r\nconst globalStyle = {\r\n    style: {\r\n        background: \"rgba(0, 0, 0, 0.65)\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        // height: \"40vh\",\r\n        minHeight: \"190px\",\r\n        minWidth: \"250px\"\r\n    },\r\n    contentStyle: {\r\n        color: \"rgba(255, 255, 255, 0.65)\"\r\n    },\r\n    inputStyle: {\r\n        color: \"rgba(255, 255, 255, 0.65)\",\r\n        position: \"relative\",\r\n        top: \"3px\"\r\n\r\n    },\r\n    promptLabelStyle: {\r\n        color: \"rgba(238, 156, 52, 0.75)\"      \r\n    }\r\n}\r\n\r\nexport default class Console extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.terminal = React.createRef()\r\n  }\r\n\r\n  commands = {\r\n    echo: {\r\n      description: 'Echo a passed string.',\r\n      usage: 'echo <string>',\r\n      fn: function () {\r\n        return `${Array.from(arguments).join(' ')}`\r\n      }\r\n    },\r\n    man: {\r\n      description: 'Manual of mo commands.',\r\n      usage: 'man',\r\n      fn: () => {\r\n        return `the console feature is in development, try again soon.`\r\n      }\r\n    },\r\n    digitalWrite: {\r\n      description: 'Write a high or low value to a pin.',\r\n      usage: 'digitalWrite <pin> <value> <unitId>',\r\n      fn: (pin, val, unitId) => {\r\n        const terminal = this.terminal.current\r\n        fetch('/digitalwrite/' + pin + '/' + val + '/' + unitId + '/')\r\n        .then(res => res.json()).then(data => terminal.pushToStdout(JSON.stringify(data.reply)));  \r\n        // return 'await reply';\r\n      }\r\n    },\r\n    rotate: {\r\n      description: 'Rotate at the given speed in the given direction.',\r\n      usage: 'rotate <speed> <direction> <unitId>',\r\n      fn: (speed, direction, unitId) => {\r\n        const terminal = this.terminal.current\r\n        fetch('/rotate/' + speed + '/' + direction + '/' + unitId + '/')\r\n        .then(res => res.json()).then(data => terminal.pushToStdout(JSON.stringify(data.reply)));  \r\n        // return 'await reply';\r\n      }\r\n    },\r\n    wait: {\r\n      description: 'Waits one second and sends a message.',\r\n      usage: 'wait',      \r\n      fn: () => {\r\n        const terminal = this.terminal.current\r\n        setTimeout(() => terminal.pushToStdout('Hello after 1 second!'), 1500)\r\n        return 'Running, please wait...'\r\n      }\r\n    }\r\n  }  \r\n    \r\n  render () {\r\n    return (\r\n      <Terminal\r\n        ref={this.terminal} // Assign ref to the terminal here\r\n        commands={this.commands}\r\n        welcomeMessage={'type \"man\" for commands'}\r\n        promptLabel={'mo>'}\r\n        {...globalStyle}\r\n        />\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport classes from './toggle.module.css';\r\nimport {Switch} from \"antd\";\r\n\r\nclass Toggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: false\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    const pinState = this.state.checked ? 1 : 0;    \r\n    fetch('/digitalwrite/' + this.props.pin + '/' + pinState + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));\r\n  };\r\n\r\n  onChange(isChecked) {\r\n    const pinState = isChecked ? 1 : 0;\r\n    fetch('/digitalwrite/' + this.props.pin + '/' + pinState + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));  \r\n    this.setState({\r\n      checked: isChecked\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.container} >\r\n        <Switch \r\n          onChange={this.onChange.bind(this)} \r\n          checked={this.state.checked}\r\n          size={this.props.size}\r\n        />\r\n      </div>\r\n      \r\n    );\r\n  };\r\n};\r\n\r\nexport default Toggle;\r\n","import React, { Component } from 'react';\r\nimport classes from './analogWriteSlider.module.css';\r\nimport {Slider} from \"antd\";\r\n\r\nclass AnalogWriteSlider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('/analogwrite/' + this.props.pin + '/' + this.state.value + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));\r\n  };\r\n\r\n  onChange(val) {\r\n    fetch('/analogwrite/' + this.props.pin + '/' + val + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));  \r\n    this.setState({\r\n      value: val\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={ classes.container }>\r\n        <Slider \r\n          vertical \r\n          max={255} \r\n          defaultValue={this.state.value}\r\n          onChange={this.onChange.bind(this)} \r\n        />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default AnalogWriteSlider;\r\n","import React, { Component } from 'react';\r\nimport classes from './analogReadButton.module.css';\r\nimport { Button } from \"antd\";\r\n\r\nclass AnalogReadButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"click\"\r\n    };\r\n  };\r\n\r\n  onClick() {\r\n    fetch('/analogread/' + this.props.pin + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => { \r\n        console.log(data);\r\n        if(data.reply){\r\n          this.setState({ value: data.reply.params });\r\n        }\r\n      });  \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.container}>\r\n        <Button \r\n          size={this.props.size} \r\n          onClick={this.onClick.bind(this)}\r\n          className={classes.buttonUnit}\r\n          >\r\n          <span className={classes.budge}>{this.state.value}</span>\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default AnalogReadButton;\r\n","import React, { Component } from 'react';\r\nimport classes from \"./dial.module.css\";\r\n// import socketIOClient from \"socket.io-client\";\r\nimport { CircularInput, CircularTrack, CircularProgress, CircularThumb } from 'react-circular-input'\r\n// import { Button, Icon } from 'antd';\r\n// const hiBlue = \"rgb(61, 153, 255)\";\r\n// const midGray = \"rgba(255, 255, 255, 0.45)\"\r\nconst hiGray = \"rgba(255, 255, 255, 0.65)\"\r\nconst loGray = \"rgba(255, 255, 255, 0.2)\"\r\n\r\nclass Dial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rotations: 0,\r\n      dialPos: 0,\r\n      lastDialVal: 0,\r\n      motiPos: 0,\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMotiPos();\r\n    setInterval(this.getMotiPos, 250);\r\n  };\r\n\r\n  getMotiPos = () => (fetch('/get/R_PRESENT_POSITION/1/' + this.props.unitId + '/')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      if (data.reply.params) {\r\n        const motiPos = data.reply.params[0] / this.props.steps;\r\n        if (motiPos !== null && isNaN(motiPos) === false) {\r\n          this.setState({ motiPos: motiPos });\r\n        }\r\n      }\r\n    })).catch(err => console.log(err))\r\n\r\n  getRangeValue(val) {\r\n    const rangeValue = Math.round(val * 360);\r\n    return rangeValue;\r\n  }\r\n\r\n  checkRollover(val) {\r\n    let rollover = 0;\r\n    const thresh = .8;\r\n    const lastDialVal = this.state.lastDialVal;\r\n    if (val < (lastDialVal - thresh)) {\r\n      rollover = 1;\r\n    }\r\n    else if (val > (lastDialVal + thresh)) {\r\n      rollover = -1;\r\n    }\r\n    return rollover;\r\n  }\r\n\r\n  moveIt() {\r\n    let destination = this.state.dialPos * this.props.steps;\r\n    fetch('/rotateTo/' + destination + '/' + this.props.speed + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => {\r\n        console.log(data);\r\n      });\r\n  }\r\n\r\n  changeValue(val) {\r\n    if (this.props.capture) {\r\n      // ignore user input if capturing with motor \r\n    }\r\n    else {\r\n      const rotations = this.state.rotations + this.checkRollover(val);\r\n      const dialPos = (val + rotations);\r\n      this.setState({\r\n        lastDialVal: val,\r\n        rotations: rotations,\r\n        dialPos: dialPos,\r\n      });\r\n      this.props.getDialPos(dialPos);\r\n      this.moveIt();\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { incomingVal, capture, getDialPos } = this.props;\r\n    const { motiPos, dialPos } = this.state;\r\n    if (incomingVal !== null && incomingVal !== prevProps.incomingVal) {\r\n      this.setState({\r\n        dialPos: incomingVal,\r\n        lastIncomingVal: incomingVal\r\n      });\r\n      if (capture == false) {\r\n        // ignore dial input if capturing from motor \r\n        this.moveIt();\r\n      }\r\n    }\r\n    if (capture && motiPos !== prevState.motiPos) {\r\n      this.setState({\r\n        dialPos: motiPos,\r\n        lastDialVal: motiPos,\r\n      })\r\n    }\r\n    if (dialPos !== prevState.dialPos) {\r\n      getDialPos((motiPos));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { motiPos, dialPos } = this.state;\r\n    // const dialPos = capture ? motiPos : this.state.dialPos;\r\n    let dialPos360 = this.getRangeValue(dialPos);\r\n    let motiPos360 = this.getRangeValue(motiPos);\r\n    const { radius, capture } = this.props;\r\n    const topText = capture ? \"(\" + motiPos360 + \"°)\" : dialPos360 + \"° \";\r\n    const subText = capture ? \"\" : \"(\" + motiPos360 + \"°)\";\r\n    return (\r\n      <div className={classes.container}>\r\n        <CircularInput onChange={this.changeValue.bind(this)} value={dialPos} radius={radius}>\r\n          <CircularTrack strokeWidth={3} stroke={loGray} />\r\n          <CircularProgress strokeWidth={0} stroke={loGray} />\r\n          <CircularThumb strokeWidth={1} stroke={loGray} fill={hiGray} r={7} />\r\n          {/* range value in center */}\r\n          <text x={radius} y={radius} textAnchor=\"middle\" dy=\"0.3em\" fill={hiGray}>\r\n            {topText}\r\n          </text>\r\n          <text x={radius} y={radius + 16} textAnchor=\"middle\" fontSize=\"10px\" fill={loGray}>\r\n            {subText}\r\n          </text>\r\n        </CircularInput>\r\n        <br />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Dial;\r\n","import React, { Component } from 'react';\r\nimport './uiControls.less';\r\nimport Toggle from './toggle';\r\nimport AnalogWriteSlider from './analogWriteSlider';\r\nimport AnalogReadButton from './analogReadButton';\r\nimport Dial from \"./dial\";\r\nimport { Row, Button, Icon } from \"antd\";\r\n\r\nclass UIcontrols extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            capture: false,\r\n        };\r\n    }\r\n\r\n    onCaptureClick() {\r\n        const { getCapture } = this.props;\r\n        let { capture } = this.state;\r\n        capture = !capture;\r\n        this.setState({ capture: capture });\r\n        getCapture(capture);\r\n        if (capture) {\r\n            fetch('/rotate/0/0/' + this.state.activeUnit + '/')\r\n                .then(res => res.json()).then(data => {\r\n                    // console.log(data);\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { activeUnit, colors, allUnits, steps, activePointVal, getDialPos, screen } = this.props;\r\n        const { capture } = this.state;\r\n        const captureIcon = capture ? \"vertical-align-top\" : \"vertical-align-bottom\";\r\n        const activeColor = colors[allUnits.indexOf(activeUnit)];\r\n        let dialRadius = 100;\r\n        let componentSize = \"default\"\r\n        if (screen.width < 400) {\r\n            dialRadius = 50;\r\n            componentSize = \"small\"\r\n        }\r\n        else if (screen.width < 600) {\r\n            dialRadius = 75;\r\n            componentSize = \"small\"\r\n        }\r\n        else if (screen.width > 1080) {\r\n            dialRadius = 100;\r\n            componentSize = \"default\"\r\n        }\r\n        return (\r\n            <div className=\"UIcontrols\">\r\n                <div className=\"UIpinBox\">\r\n                    <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                        <div className=\"UIpinUnit\">\r\n                            p11 <Toggle unitId={activeUnit} pin={11} size={componentSize} />\r\n                        </div>\r\n                    </Row>\r\n                    <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                        <div className=\"UIpinUnit\">\r\n                            p12 <Toggle unitId={activeUnit} pin={12} size={componentSize} />\r\n                        </div>\r\n                    </Row>\r\n                    <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                        <div className=\"UIpinUnit\">\r\n                            p13 <Toggle unitId={activeUnit} pin={13} size={componentSize} />\r\n                        </div>\r\n                    </Row>\r\n                    <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                        <div className=\"UIpinUnit\">\r\n                            a2 <AnalogReadButton unitId={activeUnit} pin={16} size={componentSize} />\r\n                        </div>\r\n                    </Row>\r\n                    <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                        <div className=\"UIpinUnit\">\r\n                            a3 <AnalogReadButton unitId={activeUnit} pin={17} size={componentSize} />\r\n                        </div>\r\n                    </Row>\r\n                    <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                        <div className=\"UIpinUnit\">\r\n                            a4 <AnalogReadButton unitId={activeUnit} pin={18} size={componentSize} />\r\n                        </div>\r\n                    </Row>\r\n                </div>\r\n                <div className=\"UIvSliderBox\" >\r\n                    <div className=\"UIvSliderUnit\">\r\n                        <AnalogWriteSlider unitId={activeUnit} pin={14} />\r\n                        <br />\r\n                        <span className=\"UIvSliderTitle\">a0</span>\r\n                    </div>\r\n                    <div className=\"UIvSliderUnit\">\r\n                        <AnalogWriteSlider unitId={activeUnit} pin={15} />\r\n                        <br />\r\n                        <span className=\"UIvSliderTitle\">a1</span>\r\n                    </div>\r\n                    <div className=\"UIvSliderUnit\">\r\n                        <AnalogWriteSlider unitId={activeUnit} pin={10} />\r\n                        <br />\r\n                        <span className=\"UIvSliderTitle\">p10</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"UIdialBox\">             \r\n                    <Dial\r\n                        unitId={activeUnit}\r\n                        steps={steps}\r\n                        radius={dialRadius}\r\n                        speed={255}\r\n                        capture={capture}\r\n                        getDialPos={getDialPos}\r\n                        incomingVal={activePointVal}\r\n                        vscreen={screen}\r\n                    />\r\n                    <Button type=\"link\"\r\n                        onClick={this.onCaptureClick.bind(this)}\r\n                        className=\"UIcaptureIconUnit\"\r\n                    >\r\n                        <Icon\r\n                            type={captureIcon}\r\n                            className=\"UIcaptureButtonText\"\r\n                            style={{ color: activeColor }}\r\n                        />\r\n                    </Button>\r\n                    <span className=\"UImotorId\">MO:{activeUnit}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIcontrols;","import React, { Component } from 'react'\r\nimport Chart from \"chart.js\";\r\n// chartjs-plugin-dragdata requires full path??\r\n// import 'chartjs-plugin-dragdata/dist/chartjs-plugin-dragdata.min.js';\r\nimport '../dragData';           // custom dragData module  \r\nimport classes from \"./timeline.module.css\";\r\nimport { Row } from 'antd';\r\nimport \"./pointColors.less\";\r\n\r\nlet dragDisabled = true;\r\n// const hiBlue = \"rgb(61, 153, 255)\";\r\n// const loBlue = \"rgba(61, 153, 255, 0.65)\";\r\nconst hiGray = \"rgba(255, 255, 255, 0.65)\"\r\nconst midGray = \"rgba(255, 255, 255, 0.45)\"\r\nconst loGray = \"rgba(255, 255, 255, 0.2)\"\r\n\r\nexport default class Timeline extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chartRef = React.createRef();\r\n        this.state = {\r\n            \"numPoints\": 10,\r\n            \"activePoint\": 0,\r\n            \"activePointVal\": null,\r\n            \"interval\": 2000,\r\n            \"intervalId\": null,\r\n            \"play\": false,\r\n            \"edit\": false,\r\n        }\r\n        this.saveDatasets.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {numPoints, interval} = this.state;\r\n        const xLabels = Array.from({ length: numPoints }, (e, i) => (i * interval/1000).toFixed(2));\r\n        const chartlines = this.createChartLines();\r\n        const isActiveDataset = (datasetIndex) => {\r\n            const {allUnits, activeUnit} = this.props;\r\n            let isActiveDataset = false;\r\n            if(datasetIndex === allUnits.indexOf(activeUnit)) {\r\n                isActiveDataset = true;\r\n            }\r\n            return isActiveDataset;\r\n        }\r\n        const refToSetActivePoint = (idx) => this.setActivePoint(idx);\r\n        const refToSetActivePointValue = (val) => {\r\n            this.setState({ activePointVal: val });\r\n            this.props.getActivePointVal(val);\r\n        }\r\n        const chartConfig = {\r\n            type: \"line\",\r\n            data: {\r\n                labels: xLabels,\r\n                datasets: chartlines,\r\n                backgroundColor: \"rgba(0,0,0,0)\",\r\n            },\r\n            options: {\r\n                //Customize chart options\r\n                dragData: true,\r\n                dragX: false,\r\n                dragDataRound: 0, \r\n                activeLine: 0,\r\n                onDragStart: function (e, element) {\r\n                    const idx = element._index;  \r\n                    refToSetActivePoint(idx);\r\n                    if (dragDisabled || !isActiveDataset(element._datasetIndex)) return false\r\n                },\r\n                onDrag: function (e, datasetIndex, index, value) {\r\n                    if(isActiveDataset(datasetIndex)) {\r\n                        refToSetActivePoint(index);                    \r\n                        refToSetActivePointValue(value / 360);\r\n\r\n                    }\r\n                },\r\n                onDragEnd: function (e, datasetIndex, index, value) {\r\n                    if(isActiveDataset(datasetIndex)) {\r\n                        refToSetActivePoint(index);                    \r\n                        refToSetActivePointValue(value / 360);\r\n                    }\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: \"degrees\",\r\n                            fontColor: hiGray,\r\n                            padding: 0,\r\n                        },\r\n                        ticks: {\r\n                            stepSize: 360,\r\n                            suggestedMax: 360*3,\r\n                            suggestedMin: -360*3,\r\n                            padding: 0,\r\n                            fontColor: hiGray,\r\n                            fontSize: 11,\r\n                        },\r\n                        gridLines: {\r\n                            // display: false,\r\n                            color: loGray,\r\n                        },\r\n                    }],\r\n                    xAxes: [{\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: \"seconds\",\r\n                            fontColor: hiGray,\r\n                        },\r\n                        ticks: {\r\n                            fontColor: hiGray,\r\n                            fontSize: 11,                            \r\n                        },\r\n                        gridLines: {\r\n                            // display: false,\r\n                            color: loGray,\r\n                        },\r\n                    }],\r\n                },\r\n                animation: {\r\n                    duration: this.state.interval / 2\r\n                },\r\n                legend: {\r\n                    display: false,\r\n                    labels: {\r\n                        boxWidth: 0,\r\n                    }\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                tooltips: {\r\n                    mode: \"nearest\",\r\n                    intersect: true,\r\n                    // axis: \"x\"\r\n                },\r\n                hover: {\r\n                    mode: \"nearest\",\r\n                    intersect: true,\r\n                    // axis: \"x\"\r\n                },\r\n                // onClick: (e, item) => console.log(\"onClick: \" + item[0]._datasetIndex),\r\n                layout: {\r\n                    padding: {\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0\r\n                    }\r\n                },\r\n            }\r\n        }\r\n        this.chartRef = this.chartRef.current.getContext(\"2d\");\r\n        this.chart = new Chart(this.chartRef, chartConfig);\r\n        this.pause();\r\n        this.lock();     \r\n        setInterval(this.saveDatasets, 10000);\r\n    }\r\n\r\n    setPointsRadii(numPoints, activePoint) {\r\n        return Array.from({ length: numPoints }, (e, i) => i === activePoint ? 8 : 4);\r\n    }\r\n\r\n    createChartLines() {\r\n        let datasets = JSON.parse(localStorage.getItem(\"storedDatasets\"));\r\n        if(!datasets) {\r\n            datasets = this.clearDatasets();\r\n        }\r\n        return datasets\r\n    }\r\n\r\n    saveDatasets = () => {\r\n        try {\r\n            let datasetsToSave = [];\r\n            this.chart.data.datasets.forEach((dataset, idx) => {\r\n                datasetsToSave[idx] = {...dataset};\r\n                delete datasetsToSave[idx][\"_meta\"];\r\n                datasetsToSave[idx].data = [...dataset.data];\r\n            });\r\n            localStorage.removeItem(\"storedDatasets\");\r\n            localStorage.setItem(\"storedDatasets\", JSON.stringify(datasetsToSave));\r\n        }\r\n        catch {\r\n            console.log(\"failed save\");\r\n        }\r\n    }\r\n\r\n    clearDatasets = () => {\r\n        const {allUnits, colors} = this.props;\r\n        const {numPoints} = this.state;\r\n        const datasets = allUnits.map( (id, idx) => {\r\n            const data = new Array(numPoints).fill(idx * 90);\r\n            const pointColors = new Array(numPoints).fill(colors[idx]);  \r\n            return {\r\n                id: id,\r\n                label: \"MO\" + id,\r\n                data: data,\r\n                pointBackgroundColor: pointColors,\r\n                pointRadius: this.setPointsRadii(numPoints, 0),\r\n                radius: 4,\r\n                pointHitRadius: 25,\r\n                pointHoverRadius: 8,\r\n                pointHoverColor: \"#FFF\",\r\n                borderColor: colors[idx],\r\n                borderWidth: 1,\r\n                fill: false,\r\n            }\r\n        });\r\n        console.log(\"new datasets\");\r\n        this.saveDatasets();\r\n        return datasets;\r\n    }\r\n\r\n    nextActivePoint() {\r\n        const {allUnits, activeUnit} = this.props;\r\n        const activeSetIndex = allUnits.indexOf(activeUnit);\r\n        const numPoints = this.chart.data.datasets[activeSetIndex].data.length;\r\n        let idx = (this.state.activePoint + 1) >= numPoints ? 0 : this.state.activePoint + 1;\r\n        this.setActivePoint(idx);\r\n    }\r\n\r\n    moveIt(destination, unitId) {\r\n        if(this.state.play) {\r\n            fetch('/rotateTo/' + destination + '/' + 255 + '/' + unitId + '/' )\r\n                .then(res => res.json()).then(data => { \r\n                  console.log(data);\r\n                });           \r\n        }\r\n    }\r\n\r\n    setActivePoint(pointIndex) {\r\n        this.setState({ activePoint: pointIndex });\r\n        const {allUnits} = this.props;\r\n        const {numPoints} = this.state;\r\n        // const activeSetIndex = allUnits.indexOf(activeUnit);\r\n        this.chart.data.datasets.forEach( ds => {ds.pointRadius = this.setPointsRadii(numPoints, pointIndex)});\r\n        this.chart.update(); \r\n        allUnits.forEach( (unitId, unitIndex) => {\r\n            const destination = this.chart.data.datasets[unitIndex].data[pointIndex] / 360 * this.props.steps;\r\n            this.moveIt(destination, unitId);\r\n        });\r\n        // this.moveIt(destination, activeUnit);\r\n    }\r\n\r\n    edit() {\r\n        // console.log(\"edit\");\r\n        this.pause();\r\n        this.setState({ edit: true });\r\n        this.setActivePoint(0);\r\n        dragDisabled = false;\r\n    }\r\n\r\n    lock() {\r\n        // console.log(\"lock\");\r\n        this.setState({ edit: false });\r\n        dragDisabled = true;\r\n    }    \r\n\r\n    play() {\r\n        // console.log(\"play\");\r\n        this.lock();\r\n        this.setState({ play: true });\r\n        const intervalId = setInterval(() => this.nextActivePoint(), this.state.interval);\r\n        this.setState({ intervalId: intervalId });\r\n    }\r\n\r\n    pause() {\r\n        // console.log(\"pause\");\r\n        this.setState({ play: false });\r\n        const intervalId = this.state.intervalId;\r\n        if(intervalId){\r\n            clearInterval(intervalId);\r\n        }\r\n        this.setState({ intervalId: null });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const {makePlay, makeEdit, makeSave, makeClear, allUnits, activeUnit, inPointVal, colors} = this.props;\r\n        const activeSetIndex = allUnits.indexOf(activeUnit);\r\n        if(makePlay !== prevProps.makePlay) {\r\n            makePlay ? this.play() : this.pause();        \r\n        }\r\n        if(makeEdit !== prevProps.makeEdit) {\r\n            makeEdit ? this.edit() : this.lock();        \r\n        }\r\n        if(makeSave !== prevProps.makeSave) {\r\n            this.saveDatasets();\r\n        }\r\n        if(makeClear !== prevProps.makeClear) {\r\n            this.chart.data.datasets = this.clearDatasets();\r\n            this.chart.update();   \r\n            this.saveDatasets();\r\n        }\r\n        if(inPointVal != null && inPointVal !== prevProps.inPointVal) {\r\n            if(makeEdit) {\r\n                const {activePoint} = this.state;\r\n                this.chart.data.datasets[activeSetIndex].data[activePoint] = inPointVal * 360;\r\n                this.chart.update();    \r\n                this.setState({ activePointVal: inPointVal });\r\n            }      \r\n        } \r\n        if(activeUnit !== prevProps.activeUnit) {\r\n            const idx = allUnits.indexOf(activeUnit);\r\n            this.chart.options.activeLine = idx;\r\n            // console.log(\"new active: \" + idx);\r\n        }\r\n        if(colors !== prevProps.colors) {\r\n            const {numPoints} = this.state;\r\n            this.chart.data.datasets.forEach( (dataset, idx) => {\r\n                const pointColors = new Array(numPoints).fill(colors[idx]);  \r\n                dataset.pointBackgroundColor = pointColors;\r\n                dataset.borderColor = colors[idx];\r\n            });\r\n            this.chart.update();\r\n        }\r\n    }\r\n\r\n    render() {       \r\n        return (\r\n            <div className={classes.graphContainer}>\r\n                {/* <Row type=\"flex\" justify=\"start\" align=\"top\"> */}\r\n                    <canvas\r\n                        // height=\"200px\"\r\n                        id=\"chart\"\r\n                        ref={this.chartRef}\r\n                        className={classes.canvas}\r\n                    />\r\n                {/* </Row> */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, Button } from 'antd';\r\n\r\nclass TimelineConfig extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            visible: false,\r\n        };\r\n    }\r\n        \r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(undefined)\r\n    }\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {saveTrigger, clearTrigger} = this.props;\r\n        // const saveTrigger = this.props.saveTrigger + 1;\r\n        // const clearTrigger = this.props.clearTrigger + 1;\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    title=\"Timeline Settings\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <Button type=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => this.props.getSaveTrigger(saveTrigger + 1)}\r\n                        // className=\"HQtimelineButtonUnit\"\r\n                    >\r\n                        save\r\n                        {/* <Icon type=\"setting\" className=\"HQbuttonText\" /> */}\r\n                    </Button>\r\n                    &nbsp;\r\n                    <Button type=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => this.props.getClearTrigger(clearTrigger + 1)}\r\n                        // onClick={() => { }}\r\n                        // className=\"HQtimelineButtonUnit\"\r\n                    >\r\n                        clear\r\n                        {/* <Icon type=\"setting\" className=\"HQbuttonText\" /> */}\r\n                    </Button>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TimelineConfig;\r\n","import React, { Component } from 'react';\r\nimport MoSelector from './moSelector';\r\nimport Console from './console';\r\nimport UIcontrols from './uiControls';\r\nimport Timeline from \"./timeline\";\r\nimport TimelineConfig from \"./timelineConfig\";\r\nimport { Row, Button, Icon } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport './hq.less';\r\n\r\n// const hiGray = \"rgba(255, 255, 255, 0.65)\"\r\n\r\nclass Hq extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeUnit: 1,\r\n      capture: false,\r\n      dialPos: 0,\r\n      activePointVal: null,\r\n      areTimelinesPlaying: false,\r\n      areTimelinesEditing: false,\r\n      saveTrigger: false,\r\n      clearTrigger: false,\r\n      colors: this.getColors(this.props.allUnits, 1)\r\n    };\r\n  }\r\n\r\n  getColors = (allUnits, activeUnit, activeOpacity = 1, inactiveOpacity = 0.2) => {\r\n    let colors = allUnits.map((id, idx) => {\r\n      const opacity = id === activeUnit ? activeOpacity : inactiveOpacity;\r\n      return \"hsla(\" + ((idx) * 56 + 0) % 360 + \", 100%, 70%, \" + opacity + \")\";\r\n    });\r\n    return colors;\r\n  }\r\n\r\n  onPlayClick() {\r\n    this.setState({ areTimelinesPlaying: !this.state.areTimelinesPlaying });\r\n  }\r\n\r\n  onEditClick() {\r\n    this.setState({ areTimelinesEditing: !this.state.areTimelinesEditing });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { allUnits } = this.props;\r\n    const { activeUnit } = this.state;\r\n    if (allUnits !== prevProps.allUnits || activeUnit !== prevState.activeUnit) {\r\n      const colors = this.getColors(allUnits, activeUnit);\r\n      this.setState({ colors: colors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { activeUnit, colors } = this.state;\r\n    const { allUnits, screen } = this.props;\r\n    const playState = this.state.areTimelinesPlaying;\r\n    let playIcon = playState === false ? \"play-circle\" : \"pause-circle\";\r\n    const editState = this.state.areTimelinesEditing;\r\n    let editIcon = editState === false ? \"edit\" : \"lock\";\r\n    let topRow;\r\n    let componentSize = \"default\"\r\n    if (screen) {\r\n      let console;\r\n      if (screen.width < 600) {\r\n        componentSize = \"small\"\r\n      }\r\n      else if (screen.width > 2000) {\r\n        componentSize = \"large\"\r\n      }\r\n      if (screen.width > 800) {\r\n        console = <div className=\"HQconsole\">\r\n          <Console />\r\n        </div>\r\n      }\r\n      if (screen.height > 400) {\r\n        topRow =\r\n          <div className=\"HQtopContainer\">\r\n            {console}\r\n            <div\r\n              className=\"HQuiControls\">\r\n              <UIcontrols\r\n                activeUnit={activeUnit}\r\n                allUnits={allUnits}\r\n                colors={colors}\r\n                steps={this.props.steps}\r\n                screen={this.props.screen}\r\n                getCapture={(val) => this.setState({ capture: val })}\r\n                getDialPos={(val) => this.setState({ dialPos: val })}\r\n              />\r\n            </div>\r\n          </div>\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"HQcontainer\">\r\n        {topRow}\r\n        <Row type=\"flex\" justify=\"start\" align=\"top\">\r\n          <div className=\"HQtimelineBox\">\r\n            <div className=\"HQtimelineButtonRow\">\r\n              <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n                <div className=\"HQtimelineButtonBox\">\r\n                  <Button type=\"link\"\r\n                    onClick={this.onEditClick.bind(this)}\r\n                    className=\"HQtimelineButtonUnit\"\r\n                  >\r\n                    <Icon type={editIcon} className=\"HQbuttonText\" />\r\n                  </Button>\r\n                  <Button type=\"link\"\r\n                    onClick={this.onPlayClick.bind(this)}\r\n                    className=\"HQtimelineButtonUnit\"\r\n                  >\r\n                    <Icon type={playIcon} className=\"HQbuttonText\" />\r\n                  </Button>\r\n                  <Button type=\"link\"\r\n                    onClick={() => { this.TimelineConfig.showModal() }}\r\n                    className=\"HQtimelineButtonUnit\"\r\n                  >\r\n                    <Icon type=\"setting\" className=\"HQbuttonText\" />\r\n                  </Button>\r\n                  <TimelineConfig onRef={ref => (this.TimelineConfig = ref)}\r\n                    saveTrigger={this.state.saveTrigger}\r\n                    clearTrigger={this.state.clearTrigger}\r\n                    getSaveTrigger={(val) => this.setState({ saveTrigger: val })}\r\n                    getClearTrigger={(val) => this.setState({ clearTrigger: val })}\r\n                  />\r\n                </div>\r\n                <div className=\"HQmoSelector\">\r\n                  <MoSelector\r\n                    size={componentSize}\r\n                    defaultUnit={activeUnit}\r\n                    allUnits={allUnits}\r\n                    getColors={this.getColors}\r\n                    getActiveUnit={(val) => this.setState({ activeUnit: val })}\r\n                  />\r\n                </div>\r\n              </Row>\r\n            </div>\r\n            <Row type=\"flex\" justify=\"start\" align=\"bottom\">\r\n              <Timeline\r\n                activeUnit={activeUnit}\r\n                allUnits={allUnits}\r\n                screen={this.props.screen}\r\n                steps={this.props.steps}\r\n                capture={this.state.capture}\r\n                inPointVal={this.state.dialPos}\r\n                makePlay={this.state.areTimelinesPlaying}\r\n                makeEdit={this.state.areTimelinesEditing}\r\n                makeClear={this.state.clearTrigger}\r\n                makeSave={this.state.saveTrigger}\r\n                colors={colors}\r\n                getActivePointVal={(val) => this.setState({ activePointVal: val })}\r\n              />\r\n            </Row>\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Hq;\r\n","import React, { Component } from 'react';\r\nimport './App.less';\r\nimport AppMenu from './components/menu';\r\nimport Hq from './components/hq';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      page: \"hq\",\r\n      height: window.innerHeight, \r\n      width: window.innerWidth,\r\n      steps: 4096,\r\n    };\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n    this.updateDimensions();\r\n  }\r\n\r\n  updateDimensions() {\r\n    this.setState({\r\n      screen: {\r\n        height: window.innerHeight, \r\n        width: window.innerWidth\r\n      }\r\n    });\r\n    console.log(\"width: \" + window.innerWidth + \",  height: \" + window.innerHeight);\r\n  }\r\n\r\n  render() {\r\n    const {page, screen} = this.state;\r\n    let content;\r\n    if(page === \"hq\") {\r\n      content =           \r\n        <Hq className=\"APhq\" unitId={2} allUnits={[1, 2, 3, 6, 8, 11, 14, 15, 19, 22, 24, 25]} screen={screen} steps={this.state.steps} />\r\n    }\r\n    else if(page === \"timelines\") {\r\n      content = \r\n        <div className=\"APtimelineContainer\">\r\n        </div>\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"APmenu\">\r\n          <AppMenu getChoice={ (choice) => this.setState({ page: choice }) } />\r\n        </div>\r\n        <div className=\"APoffset\"></div>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }  \r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.less';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"analogReadButton_container__2IL9P\",\"buttonUnit\":\"analogReadButton_buttonUnit__314xk\",\"budge\":\"analogReadButton_budge__MA_4C\"};"],"sourceRoot":""}