{"version":3,"sources":["components/timeline.module.css","components/toggle.module.css","components/analogWriteSlider.module.css","components/dial.module.css","dragData.js","components/menu.js","components/moSelector.js","components/console.js","components/toggle.js","components/analogWriteSlider.js","components/analogReadButton.js","components/dial.js","components/uiControls.js","components/timeline.js","components/timelineConfig.js","components/hq.js","App.js","index.js","components/analogReadButton.module.css"],"names":["module","exports","graphContainer","container","element","scale","scaleX","type","stacked","initValue","SubMenu","AppMenu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","setState","current","key","props","getChoice","state","react_default","a","createElement","menu","onClick","selectedKeys","mode","theme","className","title","style","color","ItemGroup","Item","href","rel","Component","MoSelector","onChange","idx","activeUnit","allUnits","getActiveUnit","originalElement","_this$props","getColors","altLabel","colors","alt","fontSize","padding","pagination","pageSize","total","length","size","showLessItems","position","bottom","itemRender","bind","React","globalStyle","background","width","height","minHeight","minWidth","contentStyle","inputStyle","top","promptLabelStyle","Console","commands","echo","description","usage","fn","concat","Array","from","arguments","join","digitalWrite","pin","val","unitId","terminal","fetch","then","res","json","data","pushToStdout","JSON","stringify","reply","rotate","speed","direction","wait","setTimeout","createRef","Terminal_default","assign","ref","welcomeMessage","promptLabel","Toggle","checked","pinState","console","log","isChecked","classes","es_switch","AnalogWriteSlider","value","slider","vertical","max","defaultValue","AnalogReadButton","_this2","params","catch","es_button","buttonUnit","budge","loGray","Dial","getMotiPos","motiPos","steps","isNaN","err","rotations","dialPos","lastDialVal","setInterval","Math","round","rollover","destination","capture","checkRollover","getDialPos","moveIt","prevProps","prevState","incomingVal","_this$state","lastIncomingVal","_this$state2","dialPos360","getRangeValue","motiPos360","_this$props2","radius","topText","subText","dist","changeValue","strokeWidth","stroke","fill","r","x","y","textAnchor","dy","UIcontrols","getCapture","activePointVal","screen","captureIcon","dialText","dialTooltipText","activeColor","indexOf","dialRadius","componentSize","tooltip","row","justify","align","toggle","analogReadButton","onCaptureClick","icon","dial","vscreen","analogWriteSlider","roundValue","pos","pow","calcPosition","chartInstance","datasetIndex","index","touches","scales","getValueForPixel","clientX","canvas","getBoundingClientRect","left","clientY","options","dragDataRound","min","datasets","dragX","updateData","callback","event","sourceEvent","_datasetIndex","_index","v","rScale","d","sqrt","xCenter","yCenter","scalingFactor","drawingArea","ticks","reverse","calcRadar","update","ChartJSdragDataPlugin","id","afterInit","dragData","select","chart","drag","on","activeLine","getElementsAtEvent","scaleName","config","_xScale","xAxes","newPos","curValue","getElement","onDragStart","onDrag","dragEndCallback","onDragEnd","Chart","pluginService","register","dragDisabled","hiGray","Timeline","saveDatasets","datasetsToSave","forEach","dataset","objectSpread","toConsumableArray","localStorage","removeItem","setItem","_unused","clearDatasets","numPoints","map","label","pointBackgroundColor","pointRadius","setPointsRadii","pointHitRadius","pointHoverRadius","pointHoverColor","borderColor","borderWidth","idle","chartRef","activePoint","interval","intervalId","play","edit","assertThisInitialized","xLabels","i","toFixed","chartlines","createChartLines","isActiveDataset","_this2$props","refToSetActivePoint","setActivePoint","refToSetActivePointValue","getActivePointVal","chartConfig","labels","backgroundColor","yAxes","scaleLabel","display","labelString","fontColor","stepSize","suggestedMax","suggestedMin","gridLines","animation","duration","legend","boxWidth","responsive","maintainAspectRatio","tooltips","intersect","hover","layout","right","getContext","pause","lock","parse","getItem","activeSetIndex","pointIndex","_this3","ds","unitIndex","_this4","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","_x2","apply","_ref2","_callee2","_context2","sent","_x3","_x4","_this5","nextActivePoint","clearInterval","_this$props3","makePlay","makeEdit","makeSave","makeClear","makeCapture","inPointVal","pointColors","TimelineConfig","showModal","visible","handleOk","handleCancel","onRef","undefined","saveTrigger","clearTrigger","modal","onOk","onCancel","getSaveTrigger","getClearTrigger","Hq","activeOpacity","inactiveOpacity","areTimelinesPlaying","areTimelinesEditing","captureTrigger","topRow","playIcon","editIcon","console_Console","components_uiControls","onEditClick","onPlayClick","timelineConfig","moSelector","defaultUnit","timeline_Timeline","App","page","updateDimensions","window","addEventListener","innerWidth","innerHeight","content","components_hq","src_components_menu","choice","removeEventListener","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0374faae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphContainer\":\"timeline_graphContainer__1X6eL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"toggle_container__3VUN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"analogWriteSlider_container__Us8ZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dial_container__1ZnML\"};","import Chart from 'chart.js'\r\nimport { drag } from 'd3-drag'\r\nimport { select, event } from 'd3-selection'\r\n\r\nlet element, scale, scaleX, type, stacked, initValue\r\n\r\nfunction getElement (chartInstance, callback) {\r\n  return () => {\r\n    if (event) {\r\n      const e = event.sourceEvent\r\n      const activeLine = chartInstance.options.activeLine\r\n      element = chartInstance.getElementsAtEvent(e)[activeLine]\r\n    //   element = chartInstance.getElementAtEvent(e)[0]\r\n    //   console.log(\"active line: \" + activeLine);\r\n    //   console.log(element);\r\n      type = chartInstance.config.type\r\n      let scaleName = type === 'radar' ? '_scale' : '_yScale'\r\n      if (element) {\r\n        if (chartInstance.data.datasets[element._datasetIndex].dragData === false || element[scaleName].options.dragData === false) {\r\n          element = null\r\n          return\r\n        }\r\n        \r\n        scale = element[scaleName].id\r\n        if (element._xScale) {\r\n          scaleX = element._xScale.id\r\n        }\r\n        \r\n        if (type === 'bar' || type === 'horizontalBar') {\r\n          stacked = chartInstance.config.options.scales.xAxes[0].stacked\r\n          let data = {}\r\n          let datasetIndex = element._datasetIndex\r\n          let index = element._index\r\n          let newPos = calcPosition(e,chartInstance,datasetIndex,index,data)\r\n          let curValue = chartInstance.data.datasets[datasetIndex].data[index]\r\n          initValue = newPos - curValue\r\n        }\r\n\r\n        if (typeof callback === 'function' && element) {\r\n          if ( callback(e, element) === false) {\r\n            element = null\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction roundValue(value, pos) {\r\n  if (!isNaN(pos)) {\r\n    return Math.round(value * Math.pow(10, pos))/Math.pow(10, pos)\r\n  }\r\n  return value\r\n}\r\n\r\nfunction calcRadar(e,chartInstance) {\r\n  let x,y,v\r\n  if (e.touches) {\r\n    x = e.touches[0].clientX-chartInstance.canvas.getBoundingClientRect().left\r\n    y = e.touches[0].clientY-chartInstance.canvas.getBoundingClientRect().top\r\n  } else {\r\n    x = e.clientX - chartInstance.canvas.getBoundingClientRect().left\r\n    y = e.clientY - chartInstance.canvas.getBoundingClientRect().top\r\n  }\r\n  let rScale = chartInstance.scales[scale]\r\n  let d = Math.sqrt(Math.pow(x-rScale.xCenter, 2) + Math.pow(y-rScale.yCenter, 2))\r\n  let scalingFactor = rScale.drawingArea / (rScale.max - rScale.min)\r\n  if (rScale.options.ticks.reverse) {\r\n    v = rScale.max - (d / scalingFactor)\r\n  } else {\r\n    v = rScale.min + (d / scalingFactor)\r\n  }\r\n\r\n  v = roundValue(v, chartInstance.options.dragDataRound)\r\n\r\n  v = v > chartInstance.scale.max ? chartInstance.scale.max : v\r\n  v = v < chartInstance.scale.min ? chartInstance.scale.min : v\r\n\r\n  return v\r\n}\r\n\r\nfunction calcPosition(e,chartInstance,datasetIndex,index,data) {\r\n  let x,y\r\n  if (e.touches) {\r\n    x = chartInstance.scales[scaleX].getValueForPixel(e.touches[0].clientX-chartInstance.canvas.getBoundingClientRect().left)\r\n    y = chartInstance.scales[scale].getValueForPixel(e.touches[0].clientY-chartInstance.canvas.getBoundingClientRect().top)\r\n  } else {\r\n    x = chartInstance.scales[scaleX].getValueForPixel(e.clientX - chartInstance.canvas.getBoundingClientRect().left)\r\n    y = chartInstance.scales[scale].getValueForPixel(e.clientY - chartInstance.canvas.getBoundingClientRect().top)\r\n  }\r\n\r\n  x = roundValue(x, chartInstance.options.dragDataRound)\r\n  y = roundValue(y, chartInstance.options.dragDataRound)\r\n\r\n  x = x > chartInstance.scales[scaleX].max ? chartInstance.scales[scaleX].max : x\r\n  x = x < chartInstance.scales[scaleX].min ? chartInstance.scales[scaleX].min : x\r\n\r\n  y = y > chartInstance.scales[scale].max ? chartInstance.scales[scale].max : y\r\n  y = y < chartInstance.scales[scale].min ? chartInstance.scales[scale].min : y\r\n\r\n  if(chartInstance.data.datasets[datasetIndex].data[index].x && chartInstance.options.dragX) {\r\n    data.x = x\r\n  }\r\n\r\n  if(chartInstance.data.datasets[datasetIndex].data[index].y) {\r\n    data.y = y\r\n    return data\r\n  } else {\r\n    if (type === 'horizontalBar') {\r\n      return x\r\n    } else {\r\n      return y\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateData (chartInstance, callback) {\r\n  return () => {\r\n    if (element && event) {\r\n      const e = event.sourceEvent\r\n      const datasetIndex = element._datasetIndex\r\n      const index = element._index\r\n      \r\n      let data = chartInstance.data.datasets[datasetIndex].data[index]\r\n\r\n      if (type === 'radar') {\r\n        data = calcRadar(e,chartInstance)\r\n      } else if (stacked) {\r\n        let cursorPos = calcPosition(e,chartInstance,datasetIndex,index,data)\r\n        data = cursorPos - initValue\r\n      } else {\r\n        data = calcPosition(e,chartInstance,datasetIndex,index,data)\r\n      }\r\n\r\n      if (typeof callback === 'function') {\r\n        if ( callback(e, datasetIndex, index, data) !== false) {\r\n          chartInstance.data.datasets[datasetIndex].data[index] = data\r\n          chartInstance.update(0)\r\n        }\r\n      } else {\r\n        chartInstance.data.datasets[datasetIndex].data[index] = data\r\n        chartInstance.update(0)\r\n      }\r\n    }  \r\n  }\r\n}\r\n\r\nfunction dragEndCallback (chartInstance, callback) {\r\n  return () => {\r\n    if (typeof callback === 'function' && element) {\r\n      const e = event.sourceEvent\r\n      const datasetIndex = element._datasetIndex\r\n      const index = element._index\r\n      const value = chartInstance.data.datasets[datasetIndex].data[index]\r\n      return callback(e,datasetIndex,index,value)\r\n    }\r\n  }\r\n}\r\n\r\nconst ChartJSdragDataPlugin = {\r\n  id: 'dragdata',\r\n  afterInit: function(chartInstance) {\r\n    if (chartInstance.options.dragData) {\r\n      select(chartInstance.chart.canvas).call(\r\n        drag().container(chartInstance.chart.canvas)\r\n          .on('start', getElement(chartInstance, chartInstance.options.onDragStart))\r\n          .on('drag', updateData(chartInstance, chartInstance.options.onDrag))\r\n          .on('end', dragEndCallback(chartInstance,chartInstance.options.onDragEnd))\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nChart.pluginService.register(ChartJSdragDataPlugin)\r\n\r\nexport default ChartJSdragDataPlugin","import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport './menu.less';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass AppMenu extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      current: 'hq',\r\n    };\r\n  }\r\n\r\n  handleClick = e => {\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n    this.props.getChoice(e.key);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\" theme=\"dark\" className=\"MNmenu\" >\r\n        <SubMenu\r\n          title={\r\n            <span className=\"MNsubmenu-title-wrapper\" style={{ color: \"rgba(255, 255, 255, 0.6\" }}>\r\n              {/* <Icon type=\"setting\" /> */}\r\n              Mo Control\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.ItemGroup className=\"MNmenuGroup\">\r\n            <Menu.Item key=\"hq\" className=\"MNitem\">\r\n              <a href=\"index.html\">\r\n                Mo HQ\r\n              </a>\r\n            </Menu.Item>\r\n            {/* <Menu.Item key=\"live\">Live Motion</Menu.Item> */}\r\n            <Menu.Item key=\"about\"  className=\"MNitem\">\r\n              <a href=\"http://www.robotstack.com\" rel=\"noopener noreferrer\">\r\n                About Mo\r\n              </a>\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppMenu;\r\n","import React from 'react';\r\nimport { Pagination } from 'antd';\r\n\r\nclass MoSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeUnit: this.props.allUnits[0],\r\n            current: 1\r\n        };\r\n    };\r\n\r\n    itemRender(current, type, originalElement) {\r\n        const { allUnits, getColors } = this.props;\r\n        const { activeUnit } = this.state;\r\n        const idx = current - 1;\r\n        const altLabel = \"mo:\" + allUnits[idx];\r\n        const colors = getColors(allUnits, activeUnit, 1, 0.5);\r\n        // const {activeUnit} = this.state;\r\n        // const color = idx === allUnits.indexOf(activeUnit) ? colors[idx] : \"rgba(255, 255, 255, 0.65)\";\r\n        if (type === 'page') {\r\n            return <a alt={altLabel} style={{ color: colors[idx], fontSize: \".9em\", padding: \"0px\" }}>{allUnits[idx]}</a>\r\n        }\r\n        return originalElement;\r\n    }\r\n\r\n    onChange = (idx) => {\r\n        const { allUnits } = this.props;\r\n        const activeUnit = allUnits[idx - 1];\r\n        this.setState({\r\n            activeUnit: activeUnit,\r\n            current: idx,\r\n        });\r\n        this.props.getActiveUnit(activeUnit);\r\n    };\r\n\r\n    render() {\r\n        const { allUnits } = this.props;\r\n        const { current } = this.state;\r\n        return <Pagination\r\n            current={current}\r\n            pageSize={1}\r\n            onChange={this.onChange}\r\n            total={allUnits.length}\r\n            size={this.props.size}\r\n            showLessItems={true}\r\n            // showTitle=\"false\"\r\n            // hideOnSinglePage={true}\r\n            style={{ position: \"relative\", bottom: \"1px\" }}\r\n            itemRender={this.itemRender.bind(this)} />;\r\n    }\r\n}\r\n\r\nexport default MoSelector;\r\n","import React from 'react'\r\nimport Terminal from 'react-console-emulator'\r\n\r\n\r\nconst globalStyle = {\r\n    style: {\r\n        background: \"rgba(0, 0, 0, 1)\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        // height: \"40vh\",\r\n        minHeight: \"190px\",\r\n        minWidth: \"250px\"\r\n    },\r\n    contentStyle: {\r\n        color: \"rgba(255, 255, 255, 0.65)\"\r\n    },\r\n    inputStyle: {\r\n        color: \"rgba(255, 255, 255, 0.65)\",\r\n        position: \"relative\",\r\n        top: \"3px\"\r\n\r\n    },\r\n    promptLabelStyle: {\r\n        color: \"rgba(238, 156, 52, 0.75)\"      \r\n    }\r\n}\r\n\r\nexport default class Console extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.terminal = React.createRef()\r\n  }\r\n\r\n  commands = {\r\n    echo: {\r\n      description: 'Echo a passed string.',\r\n      usage: 'echo <string>',\r\n      fn: function () {\r\n        return `${Array.from(arguments).join(' ')}`\r\n      }\r\n    },\r\n    digitalWrite: {\r\n      description: 'Write a high or low value to a pin.',\r\n      usage: 'digitalWrite <pin> <value> <unitId>',\r\n      fn: (pin, val, unitId) => {\r\n        const terminal = this.terminal.current\r\n        fetch('/digitalwrite/' + pin + '/' + val + '/' + unitId + '/')\r\n        .then(res => res.json()).then(data => terminal.pushToStdout(JSON.stringify(data.reply)));  \r\n        // return 'await reply';\r\n      }\r\n    },\r\n    rotate: {\r\n      description: 'Rotate at the given speed in the given direction.',\r\n      usage: 'rotate <speed> <direction> <unitId>',\r\n      fn: (speed, direction, unitId) => {\r\n        const terminal = this.terminal.current\r\n        fetch('/rotate/' + speed + '/' + direction + '/' + unitId + '/')\r\n        .then(res => res.json()).then(data => terminal.pushToStdout(JSON.stringify(data.reply)));  \r\n        // return 'await reply';\r\n      }\r\n    },\r\n    wait: {\r\n      description: 'Waits one second and sends a message.',\r\n      usage: 'wait',      \r\n      fn: () => {\r\n        const terminal = this.terminal.current\r\n        setTimeout(() => terminal.pushToStdout('Hello after 1 second!'), 1500)\r\n        return 'Running, please wait...'\r\n      }\r\n    }\r\n  }  \r\n    \r\n  render () {\r\n    return (\r\n      <Terminal\r\n        ref={this.terminal} // Assign ref to the terminal here\r\n        commands={this.commands}\r\n        welcomeMessage={'console in development - type \"help\" for available commands'}\r\n        promptLabel={'mo>'}\r\n        {...globalStyle}\r\n        />\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport classes from './toggle.module.css';\r\nimport {Switch} from \"antd\";\r\n\r\nclass Toggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: false\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    const pinState = this.state.checked ? 1 : 0;    \r\n    fetch('/digitalwrite/' + this.props.pin + '/' + pinState + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));\r\n  };\r\n\r\n  onChange(isChecked) {\r\n    const pinState = isChecked ? 1 : 0;\r\n    fetch('/digitalwrite/' + this.props.pin + '/' + pinState + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));  \r\n    this.setState({\r\n      checked: isChecked\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.container} >\r\n        <Switch \r\n          onChange={this.onChange.bind(this)} \r\n          checked={this.state.checked}\r\n          size={this.props.size}\r\n        />\r\n      </div>\r\n      \r\n    );\r\n  };\r\n};\r\n\r\nexport default Toggle;\r\n","import React, { Component } from 'react';\r\nimport classes from './analogWriteSlider.module.css';\r\nimport {Slider} from \"antd\";\r\n\r\nclass AnalogWriteSlider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('/analogwrite/' + this.props.pin + '/' + this.state.value + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));\r\n  };\r\n\r\n  onChange(val) {\r\n    fetch('/analogwrite/' + this.props.pin + '/' + val + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));  \r\n    this.setState({\r\n      value: val\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={ classes.container }>\r\n        <Slider \r\n          vertical \r\n          max={255} \r\n          defaultValue={this.state.value}\r\n          onChange={this.onChange.bind(this)} \r\n        />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default AnalogWriteSlider;\r\n","import React, { Component } from 'react';\r\nimport classes from './analogReadButton.module.css';\r\nimport { Button } from \"antd\";\r\n\r\nclass AnalogReadButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"click\"\r\n    };\r\n  };\r\n\r\n  onClick() {\r\n    fetch('/analogread/' + this.props.pin + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => { \r\n        console.log(data);\r\n        if(data.reply){\r\n          this.setState({ value: data.reply.params });\r\n        }\r\n      }).catch( () => \r\n        this.setState({ value: \"null\" })  \r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.container}>\r\n        <Button \r\n          size={this.props.size} \r\n          onClick={this.onClick.bind(this)}\r\n          className={classes.buttonUnit}\r\n          >\r\n          <span className={classes.budge}>{this.state.value}</span>\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default AnalogReadButton;\r\n","import React, { Component } from 'react';\r\nimport classes from \"./dial.module.css\";\r\n// import socketIOClient from \"socket.io-client\";\r\nimport { CircularInput, CircularTrack, CircularProgress, CircularThumb } from 'react-circular-input'\r\n// import { Button, Icon } from 'antd';\r\n// const hiBlue = \"rgb(61, 153, 255)\";\r\n// const midGray = \"rgba(255, 255, 255, 0.45)\"\r\nconst hiGray = \"rgba(255, 255, 255, 0.65)\"\r\nconst loGray = \"rgba(255, 255, 255, 0.2)\"\r\n\r\nclass Dial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rotations: 0,\r\n      dialPos: 0,\r\n      lastDialVal: 0,\r\n      motiPos: 0,\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMotiPos();\r\n    setInterval(this.getMotiPos, 250);\r\n  };\r\n\r\n  getMotiPos = () => (fetch('/get/R_PRESENT_POSITION/1/' + this.props.unitId + '/')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      if (data.reply.params) {\r\n        const motiPos = data.reply.params[0] / this.props.steps;\r\n        if (motiPos !== null && isNaN(motiPos) === false) {\r\n          this.setState({ motiPos: motiPos });\r\n        }\r\n      }\r\n    })).catch(err => {console.log(err)})\r\n\r\n  getRangeValue(val) {\r\n    const rangeValue = Math.round(val * 360);\r\n    return rangeValue;\r\n  }\r\n\r\n  checkRollover(val) {\r\n    let rollover = 0;\r\n    const thresh = .8;\r\n    const lastDialVal = this.state.lastDialVal;\r\n    if (val < (lastDialVal - thresh)) {\r\n      rollover = 1;\r\n    }\r\n    else if (val > (lastDialVal + thresh)) {\r\n      rollover = -1;\r\n    }\r\n    return rollover;\r\n  }\r\n\r\n  moveIt() {\r\n    let destination = this.state.dialPos * this.props.steps;\r\n    fetch('/rotateTo/' + destination + '/' + this.props.speed + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => {\r\n        console.log(data);\r\n      });\r\n  }\r\n\r\n  changeValue(val) {\r\n    if (this.props.capture) {\r\n      // ignore user input if capturing with motor \r\n    }\r\n    else {\r\n      const rotations = this.state.rotations + this.checkRollover(val);\r\n      const dialPos = (val + rotations);\r\n      this.setState({\r\n        lastDialVal: val,\r\n        rotations: rotations,\r\n        dialPos: dialPos,\r\n      });\r\n      this.props.getDialPos(dialPos);\r\n      this.moveIt();\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { incomingVal, capture, getDialPos, color } = this.props;\r\n    const { motiPos, dialPos } = this.state;\r\n    if (incomingVal !== null && incomingVal !== prevProps.incomingVal) {\r\n      this.setState({\r\n        dialPos: incomingVal,\r\n        lastIncomingVal: incomingVal\r\n      });\r\n      if (capture === false) {\r\n        // ignore dial input if capturing from motor \r\n        this.moveIt();\r\n      }\r\n    }\r\n    if (capture && motiPos !== prevState.motiPos) {\r\n      this.setState({\r\n        dialPos: motiPos,\r\n        lastDialVal: motiPos,\r\n      })\r\n    }\r\n    if (dialPos !== prevState.dialPos) {\r\n      getDialPos((motiPos));\r\n    }\r\n    console.log(color);\r\n  }\r\n\r\n  render() {\r\n    const { color } = this.props;\r\n    const { motiPos, dialPos } = this.state;\r\n    // const dialPos = capture ? motiPos : this.state.dialPos;\r\n    let dialPos360 = this.getRangeValue(dialPos);\r\n    let motiPos360 = this.getRangeValue(motiPos);\r\n    const { radius, capture } = this.props;\r\n    const topText = capture ? \"(\" + motiPos360 + \"°)\" : dialPos360 + \"° \";\r\n    const subText = capture ? \"\" : \"(\" + motiPos360 + \"°)\";\r\n    return (\r\n      <div className={classes.container}>\r\n        <CircularInput onChange={this.changeValue.bind(this)} value={dialPos} radius={radius}>\r\n          <CircularTrack strokeWidth={1} stroke={color} />\r\n          <CircularProgress strokeWidth={0} stroke={loGray} />\r\n          <CircularThumb strokeWidth={1} stroke={color} fill={color} r={7} />\r\n          {/* range value in center */}\r\n          <text x={radius} y={radius} textAnchor=\"middle\" dy=\"0.3em\" fill={hiGray}>\r\n            {topText}\r\n          </text>\r\n          <text x={radius} y={radius + 16} textAnchor=\"middle\" fontSize=\"10px\" fill={loGray}>\r\n            {subText}\r\n          </text>\r\n        </CircularInput>\r\n        <br />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Dial;\r\n","import React, { Component } from 'react';\r\nimport './uiControls.less';\r\nimport Toggle from './toggle';\r\nimport AnalogWriteSlider from './analogWriteSlider';\r\nimport AnalogReadButton from './analogReadButton';\r\nimport Dial from \"./dial\";\r\nimport { Row, Button, Icon, Tooltip } from \"antd\";\r\n\r\nclass UIcontrols extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            capture: false,\r\n        };\r\n    }\r\n\r\n    onCaptureClick() {\r\n        const { getCapture } = this.props;\r\n        let { capture } = this.state;\r\n        capture = !capture;\r\n        this.setState({ capture: capture });\r\n        getCapture(capture);\r\n        if (capture) {\r\n            fetch('/rotate/0/0/' + this.props.activeUnit + '/')\r\n                .then(res => res.json()).then(data => {\r\n                    console.log(data);\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { activeUnit, colors, allUnits, steps, activePointVal, getDialPos, screen } = this.props;\r\n        const { capture } = this.state;\r\n        const captureIcon = capture ? \"vertical-align-top\" : \"vertical-align-bottom\";\r\n        const dialText = capture ? \"captureFrom\" : \"rotateTo\";\r\n        let dialTooltipText = capture ? \"Capture: Manually turn motor to read its position to the dial. Click Arrow to Drive instead.\" : \"Drive: Turn dial to make motor move to corresponding position. Click Arrow to Capture instead.\";\r\n        const activeColor = colors[allUnits.indexOf(activeUnit)];\r\n        let dialRadius = 80;\r\n        let componentSize = \"default\"\r\n        if (screen.width < 400) {\r\n            dialRadius = 50;\r\n            componentSize = \"small\"\r\n        }\r\n        else if (screen.width < 600) {\r\n            dialRadius = 65;\r\n            componentSize = \"small\"\r\n        }\r\n        else if (screen.width > 1080) {\r\n            dialRadius = 100;\r\n            componentSize = \"default\"\r\n        }\r\n        return (\r\n            <div className=\"UIcontrols\">\r\n                <div className=\"UIpinBox\">\r\n                    <Tooltip title=\"Turn corresponding pin On or Off\">\r\n                        <span className=\"UIioTitle\">digitalWrite</span>\r\n                    </Tooltip>\r\n                    <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                        <div className=\"UIpinUnit\">\r\n                            p11 <Toggle unitId={activeUnit} pin={11} size={componentSize} />\r\n                        </div>\r\n                    </Row>\r\n                    <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                        <div className=\"UIpinUnit\">\r\n                            p12 <Toggle unitId={activeUnit} pin={12} size={componentSize} />\r\n                        </div>\r\n                    </Row>\r\n                    <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                        <div className=\"UIpinUnit\">\r\n                            p13 <Toggle unitId={activeUnit} pin={13} size={componentSize} />\r\n                        </div>\r\n                    </Row>\r\n                    <Tooltip title=\"Read value(0 to 1024)/voltage(0 to 3.3V) of corresponding pin\">\r\n                        <span className=\"UIioTitlePadded\">analogRead</span>\r\n                    </Tooltip>\r\n                    <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                        <div className=\"UIpinUnit\">\r\n                            a2 <AnalogReadButton unitId={activeUnit} pin={16} size={componentSize} />\r\n                        </div>\r\n                    </Row>\r\n                    <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                        <div className=\"UIpinUnit\">\r\n                            a3 <AnalogReadButton unitId={activeUnit} pin={17} size={componentSize} />\r\n                        </div>\r\n                    </Row>\r\n                    <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                        <div className=\"UIpinUnit\">\r\n                            a4 <AnalogReadButton unitId={activeUnit} pin={18} size={componentSize} />\r\n                        </div>\r\n                    </Row>\r\n                </div>\r\n                <div className=\"UIdialBox\">\r\n                    <div className=\"UIdialBoxHeader\">\r\n                        <Tooltip title={dialTooltipText}>\r\n                            {dialText}\r\n                        </Tooltip>\r\n                        <Button type=\"link\"\r\n                            onClick={this.onCaptureClick.bind(this)}\r\n                            className=\"UIcaptureIconUnit\"\r\n                        >\r\n                            <Icon\r\n                                type={captureIcon}\r\n                                className=\"UIcaptureButtonText\"\r\n                                // style={{ color: activeColor }}\r\n                            />\r\n                        </Button>\r\n                        <div className=\"UIdial\">\r\n                            <Dial\r\n                                unitId={activeUnit}\r\n                                steps={steps}\r\n                                radius={dialRadius}\r\n                                speed={255}\r\n                                capture={capture}\r\n                                getDialPos={getDialPos}\r\n                                incomingVal={activePointVal}\r\n                                vscreen={screen}\r\n                                color={activeColor}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"UImotorId\">\r\n                        <Tooltip title=\"The active motor\">\r\n                            {/* MO:<span style={{ color: activeColor }}>{activeUnit}</span> */}\r\n                            MO:{activeUnit}\r\n                        </Tooltip>\r\n                    </div>\r\n                </div>\r\n                <div className=\"UIvSliderBox\" >\r\n                    <Tooltip title=\"Move sliders to change value(0 to 255)/voltage(0 to 3.3V) on corresponding pin\">\r\n                        <span className=\"UIioTitle\">analogWrite</span>\r\n                    </Tooltip>\r\n                    <div className=\"UIvSliderBoxSub\">\r\n                        <div className=\"UIvSliderUnit\">\r\n                            <AnalogWriteSlider unitId={activeUnit} pin={14} />\r\n                            <br />\r\n                            <span className=\"UIvSliderTitle\">a0</span>\r\n                        </div>\r\n                        <div className=\"UIvSliderUnit\">\r\n                            <AnalogWriteSlider unitId={activeUnit} pin={15} />\r\n                            <br />\r\n                            <span className=\"UIvSliderTitle\">a1</span>\r\n                        </div>\r\n                        <div className=\"UIvSliderUnit\">\r\n                            <AnalogWriteSlider unitId={activeUnit} pin={10} />\r\n                            <br />\r\n                            <span className=\"UIvSliderTitle\">p10</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIcontrols;","import React, { Component } from 'react'\r\nimport Chart from \"chart.js\";\r\nimport '../dragData';           // custom dragData module  \r\nimport classes from \"./timeline.module.css\";\r\nimport \"./pointColors.less\";\r\n\r\nlet dragDisabled = true;\r\n// const hiBlue = \"rgb(61, 153, 255)\";\r\n// const loBlue = \"rgba(61, 153, 255, 0.65)\";\r\nconst hiGray = \"rgba(255, 255, 255, 0.65)\"\r\n// const midGray = \"rgba(255, 255, 255, 0.45)\"\r\nconst loGray = \"rgba(255, 255, 255, 0.2)\"\r\n\r\nexport default class Timeline extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chartRef = React.createRef();\r\n        this.state = {\r\n            \"numPoints\": 10,\r\n            \"activePoint\": 0,\r\n            \"activePointVal\": null,\r\n            \"interval\": 4000,\r\n            \"intervalId\": null,\r\n            \"play\": false,\r\n            \"edit\": false,\r\n        }\r\n        this.saveDatasets.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { numPoints, interval } = this.state;\r\n        const xLabels = Array.from({ length: numPoints }, (e, i) => (i * interval / 1000).toFixed(2));\r\n        const chartlines = this.createChartLines();\r\n        const isActiveDataset = (datasetIndex) => {\r\n            const { allUnits, activeUnit } = this.props;\r\n            let isActiveDataset = false;\r\n            if (datasetIndex === allUnits.indexOf(activeUnit)) {\r\n                isActiveDataset = true;\r\n            }\r\n            return isActiveDataset;\r\n        }\r\n        const refToSetActivePoint = (idx) => this.setActivePoint(idx);\r\n        const refToSetActivePointValue = (val) => {\r\n            this.setState({ activePointVal: val });\r\n            this.props.getActivePointVal(val);\r\n        }\r\n        const chartConfig = {\r\n            type: \"line\",\r\n            data: {\r\n                labels: xLabels,\r\n                datasets: chartlines,\r\n                backgroundColor: \"rgba(0,0,0,0)\",\r\n            },\r\n            options: {\r\n                //Customize chart options\r\n                dragData: true,\r\n                dragX: false,\r\n                dragDataRound: 0,\r\n                activeLine: 0,\r\n                onDragStart: function (e, element) {\r\n                    const idx = element._index;\r\n                    refToSetActivePoint(idx);\r\n                    if (dragDisabled || !isActiveDataset(element._datasetIndex)) return false\r\n                },\r\n                onDrag: function (e, datasetIndex, index, value) {\r\n                    if (isActiveDataset(datasetIndex)) {\r\n                        refToSetActivePoint(index);\r\n                        refToSetActivePointValue(value / 360);\r\n\r\n                    }\r\n                },\r\n                onDragEnd: function (e, datasetIndex, index, value) {\r\n                    if (isActiveDataset(datasetIndex)) {\r\n                        refToSetActivePoint(index);\r\n                        refToSetActivePointValue(value / 360);\r\n                    }\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: \"degrees\",\r\n                            fontColor: hiGray,\r\n                            padding: 0,\r\n                        },\r\n                        ticks: {\r\n                            stepSize: 360,\r\n                            suggestedMax: 360 * 3,\r\n                            suggestedMin: -360 * 3,\r\n                            padding: 0,\r\n                            fontColor: hiGray,\r\n                            fontSize: 11,\r\n                        },\r\n                        gridLines: {\r\n                            // display: false,\r\n                            color: loGray,\r\n                        },\r\n                    }],\r\n                    xAxes: [{\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: \"seconds\",\r\n                            fontColor: hiGray,\r\n                        },\r\n                        ticks: {\r\n                            fontColor: hiGray,\r\n                            fontSize: 11,\r\n                        },\r\n                        gridLines: {\r\n                            // display: false,\r\n                            color: loGray,\r\n                        },\r\n                    }],\r\n                },\r\n                animation: {\r\n                    duration: this.state.interval / 2\r\n                },\r\n                legend: {\r\n                    display: false,\r\n                    labels: {\r\n                        boxWidth: 0,\r\n                    }\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                tooltips: {\r\n                    mode: \"nearest\",\r\n                    intersect: true,\r\n                    // axis: \"x\"\r\n                },\r\n                hover: {\r\n                    mode: \"nearest\",\r\n                    intersect: true,\r\n                    // axis: \"x\"\r\n                },\r\n                // onClick: (e, item) => console.log(\"onClick: \" + item[0]._datasetIndex),\r\n                layout: {\r\n                    padding: {\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0\r\n                    }\r\n                },\r\n            }\r\n        }\r\n        this.chartRef = this.chartRef.current.getContext(\"2d\");\r\n        this.chart = new Chart(this.chartRef, chartConfig);\r\n        this.pause();\r\n        this.lock();\r\n        setInterval(this.saveDatasets, 10000);\r\n    }\r\n\r\n    setPointsRadii(numPoints, activePoint) {\r\n        return Array.from({ length: numPoints }, (e, i) => i === activePoint ? 8 : 4);\r\n    }\r\n\r\n    createChartLines() {\r\n        let datasets = JSON.parse(localStorage.getItem(\"storedDatasets\"));\r\n        if (!datasets) {\r\n            datasets = this.clearDatasets();\r\n        }\r\n        return datasets\r\n    }\r\n\r\n    saveDatasets = () => {\r\n        try {\r\n            let datasetsToSave = [];\r\n            this.chart.data.datasets.forEach((dataset, idx) => {\r\n                datasetsToSave[idx] = { ...dataset };\r\n                delete datasetsToSave[idx][\"_meta\"];\r\n                datasetsToSave[idx].data = [...dataset.data];\r\n            });\r\n            localStorage.removeItem(\"storedDatasets\");\r\n            localStorage.setItem(\"storedDatasets\", JSON.stringify(datasetsToSave));\r\n        }\r\n        catch {\r\n            console.log(\"failed save\");\r\n        }\r\n    }\r\n\r\n    clearDatasets = () => {\r\n        const { allUnits, colors } = this.props;\r\n        const { numPoints } = this.state;\r\n        const datasets = allUnits.map((id, idx) => {\r\n            const data = new Array(numPoints).fill(idx * 90);\r\n            const pointColors = new Array(numPoints).fill(colors[idx]);\r\n            return {\r\n                id: id,\r\n                label: \"MO\" + id,\r\n                data: data,\r\n                pointBackgroundColor: pointColors,\r\n                pointRadius: this.setPointsRadii(numPoints, 0),\r\n                radius: 4,\r\n                pointHitRadius: 25,\r\n                pointHoverRadius: 8,\r\n                pointHoverColor: \"#FFF\",\r\n                borderColor: colors[idx],\r\n                borderWidth: 1,\r\n                fill: false,\r\n            }\r\n        });\r\n        console.log(\"new datasets\");\r\n        this.saveDatasets();\r\n        return datasets;\r\n    }\r\n\r\n    nextActivePoint() {\r\n        const { allUnits, activeUnit } = this.props;\r\n        const activeSetIndex = allUnits.indexOf(activeUnit);\r\n        const numPoints = this.chart.data.datasets[activeSetIndex].data.length;\r\n        let idx = (this.state.activePoint + 1) >= numPoints ? 0 : this.state.activePoint + 1;\r\n        this.setActivePoint(idx);\r\n    }\r\n\r\n    setActivePoint(pointIndex) {\r\n        this.setState({ activePoint: pointIndex });\r\n        const { allUnits } = this.props;\r\n        const { numPoints } = this.state;\r\n        // const activeSetIndex = allUnits.indexOf(activeUnit);\r\n        this.chart.data.datasets.forEach(ds => { ds.pointRadius = this.setPointsRadii(numPoints, pointIndex) });\r\n        this.chart.update();\r\n        allUnits.forEach((unitId, unitIndex) => {\r\n            const destination = this.chart.data.datasets[unitIndex].data[pointIndex] / 360 * this.props.steps;\r\n            this.moveIt(destination, unitId);\r\n        });\r\n        // this.moveIt(destination, activeUnit);\r\n    }\r\n\r\n    moveIt(destination, unitId) {\r\n        if (this.state.play) {\r\n            fetch('/rotateTo/' + destination + '/' + 255 + '/' + unitId + '/')\r\n                .then(res => res.json()).then(data => {\r\n                    console.log(data);\r\n                });\r\n        }\r\n    }\r\n\r\n    getMotiPos = (unitId) => (fetch('/get/R_PRESENT_POSITION/1/' + unitId + '/')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            let motiPos;\r\n            if (data.reply.params) {\r\n                motiPos = data.reply.params[0] / this.props.steps;\r\n            }\r\n            return motiPos;\r\n        })).catch(err => console.log(err))\r\n\r\n    idle = (unitId) => (fetch('/rotate/0/0/' + unitId + '/')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data);\r\n        })).catch(err => console.log(err))\r\n\r\n    capture() {\r\n        const { allUnits } = this.props;\r\n        const { activePoint } = this.state;\r\n        // const activeSetIndex = allUnits.indexOf(activeUnit);\r\n        allUnits.forEach(async (unitId, unitIndex) => {\r\n            await this.idle(unitId);\r\n        });\r\n        allUnits.forEach(async (unitId, unitIndex) => {\r\n            const pos = await this.getMotiPos(unitId)\r\n            console.log(pos * 360);\r\n            if (pos !== null && isNaN(pos) === false) {\r\n                this.chart.data.datasets[unitIndex].data[activePoint] = pos * 360;\r\n            }\r\n            this.chart.update();\r\n        });\r\n    }\r\n\r\n    edit() {\r\n        // console.log(\"edit\");\r\n        this.pause();\r\n        this.setState({ edit: true });\r\n        this.setActivePoint(0);\r\n        dragDisabled = false;\r\n    }\r\n\r\n    lock() {\r\n        // console.log(\"lock\");\r\n        this.setState({ edit: false });\r\n        dragDisabled = true;\r\n    }\r\n\r\n    play() {\r\n        // console.log(\"play\");\r\n        this.lock();\r\n        this.setState({ play: true });\r\n        const intervalId = setInterval(() => this.nextActivePoint(), this.state.interval);\r\n        this.setState({ intervalId: intervalId });\r\n    }\r\n\r\n    pause() {\r\n        // console.log(\"pause\");\r\n        this.setState({ play: false });\r\n        const intervalId = this.state.intervalId;\r\n        if (intervalId) {\r\n            clearInterval(intervalId);\r\n        }\r\n        this.setState({ intervalId: null });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { makePlay, makeEdit, makeSave, makeClear, makeCapture, allUnits, activeUnit, inPointVal, colors } = this.props;\r\n        const activeSetIndex = allUnits.indexOf(activeUnit);\r\n        if (makePlay !== prevProps.makePlay) {\r\n            makePlay ? this.play() : this.pause();\r\n        }\r\n        if (makeEdit !== prevProps.makeEdit) {\r\n            makeEdit ? this.edit() : this.lock();\r\n        }\r\n        if (makeSave !== prevProps.makeSave) {\r\n            this.saveDatasets();\r\n        }\r\n        if (makeClear !== prevProps.makeClear) {\r\n            this.chart.data.datasets = this.clearDatasets();\r\n            this.chart.update();\r\n            this.saveDatasets();\r\n        }\r\n        if (makeCapture !== prevProps.makeCapture) {\r\n            this.capture();\r\n        }\r\n        if (inPointVal != null && inPointVal !== prevProps.inPointVal) {\r\n            if (makeEdit) {\r\n                const { activePoint } = this.state;\r\n                this.chart.data.datasets[activeSetIndex].data[activePoint] = inPointVal * 360;\r\n                this.chart.update();\r\n                this.setState({ activePointVal: inPointVal });\r\n            }\r\n        }\r\n        if (activeUnit !== prevProps.activeUnit) {\r\n            const idx = allUnits.indexOf(activeUnit);\r\n            this.chart.options.activeLine = idx;\r\n            // console.log(\"new active: \" + idx);\r\n        }\r\n        if (colors !== prevProps.colors) {\r\n            const { numPoints } = this.state;\r\n            this.chart.data.datasets.forEach((dataset, idx) => {\r\n                const pointColors = new Array(numPoints).fill(colors[idx]);\r\n                dataset.pointBackgroundColor = pointColors;\r\n                dataset.borderColor = colors[idx];\r\n            });\r\n            this.chart.update();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.graphContainer}>\r\n                <canvas\r\n                    // height=\"200px\"\r\n                    id=\"chart\"\r\n                    ref={this.chartRef}\r\n                    className={classes.canvas}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, Button } from 'antd';\r\n\r\nclass TimelineConfig extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            visible: false,\r\n        };\r\n    }\r\n        \r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(undefined)\r\n    }\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {saveTrigger, clearTrigger} = this.props;\r\n        // const saveTrigger = this.props.saveTrigger + 1;\r\n        // const clearTrigger = this.props.clearTrigger + 1;\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    title=\"Timeline Settings\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <Button type=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => this.props.getSaveTrigger(saveTrigger + 1)}\r\n                        // className=\"HQtimelineButtonUnit\"\r\n                    >\r\n                        save\r\n                        {/* <Icon type=\"setting\" className=\"HQbuttonText\" /> */}\r\n                    </Button>\r\n                    &nbsp;\r\n                    <Button type=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => this.props.getClearTrigger(clearTrigger + 1)}\r\n                        // onClick={() => { }}\r\n                        // className=\"HQtimelineButtonUnit\"\r\n                    >\r\n                        clear\r\n                        {/* <Icon type=\"setting\" className=\"HQbuttonText\" /> */}\r\n                    </Button>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TimelineConfig;\r\n","import React, { Component } from 'react';\r\nimport MoSelector from './moSelector';\r\nimport Console from './console';\r\nimport UIcontrols from './uiControls';\r\nimport Timeline from \"./timeline\";\r\nimport TimelineConfig from \"./timelineConfig\";\r\nimport { Row, Button, Icon, Tooltip } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport './hq.less';\r\n\r\n// const hiGray = \"rgba(255, 255, 255, 0.65)\"\r\n\r\nclass Hq extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeUnit: 1,\r\n      capture: false,\r\n      dialPos: 0,\r\n      activePointVal: null,\r\n      areTimelinesPlaying: false,\r\n      areTimelinesEditing: false,\r\n      saveTrigger: false,\r\n      clearTrigger: false,\r\n      captureTrigger: 0,\r\n      colors: this.getColors(this.props.allUnits, 1)\r\n    };\r\n  }\r\n\r\n  getColors = (allUnits, activeUnit, activeOpacity = 0.9, inactiveOpacity = 0.2) => {\r\n    let colors = allUnits.map((id, idx) => {\r\n      const opacity = id === activeUnit ? activeOpacity : inactiveOpacity;\r\n      return \"hsla(\" + ((idx) * 56 + 0) % 360 + \", 60%, 60%, \" + opacity + \")\";\r\n    });\r\n    return colors;\r\n  }\r\n\r\n  onPlayClick() {\r\n    this.setState({ areTimelinesPlaying: !this.state.areTimelinesPlaying });\r\n  }\r\n\r\n  onEditClick() {\r\n    this.setState({ areTimelinesEditing: !this.state.areTimelinesEditing });\r\n  }\r\n\r\n  onCaptureClick() {\r\n    const { captureTrigger } = this.state;\r\n    this.setState({ captureTrigger: captureTrigger + 1 })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { allUnits } = this.props;\r\n    const { activeUnit } = this.state;\r\n    if (allUnits !== prevProps.allUnits || activeUnit !== prevState.activeUnit) {\r\n      const colors = this.getColors(allUnits, activeUnit);\r\n      this.setState({ colors: colors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { activeUnit, colors } = this.state;\r\n    const { allUnits, screen } = this.props;\r\n    const playState = this.state.areTimelinesPlaying;\r\n    let playIcon = playState === false ? \"play-circle\" : \"pause-circle\";\r\n    const editState = this.state.areTimelinesEditing;\r\n    let editIcon = editState === false ? \"edit\" : \"lock\";\r\n    let topRow;\r\n    let componentSize = \"default\";\r\n    // let timelineTitle = \"motion timeline\";\r\n    if (screen) {\r\n      let console;\r\n      if (screen.width < 600) {\r\n        componentSize = \"small\";\r\n        // timelineTitle = \"\";\r\n      }\r\n      else if (screen.width > 2000) {\r\n        componentSize = \"large\";\r\n      }\r\n      if (screen.width > 800) {\r\n        console = <div className=\"HQconsole\">\r\n          <Console />\r\n        </div>\r\n      }\r\n      if (screen.height > 500) {\r\n        topRow =\r\n          <div className=\"HQtopContainer\">\r\n            {console}\r\n            <div\r\n              className=\"HQuiControls\">\r\n              <UIcontrols\r\n                activeUnit={activeUnit}\r\n                allUnits={allUnits}\r\n                colors={colors}\r\n                steps={this.props.steps}\r\n                screen={this.props.screen}\r\n                getCapture={(val) => this.setState({ capture: val })}\r\n                getDialPos={(val) => this.setState({ dialPos: val })}\r\n              />\r\n            </div>\r\n          </div>\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"HQcontainer\">\r\n        {topRow}\r\n        <Row type=\"flex\" justify=\"start\" align=\"top\">\r\n          <div className=\"HQtimelineBox\">\r\n            <div className=\"HQtimelineButtonRow\">\r\n              <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n                <div className=\"HQtimelineButtonBox\">\r\n                  <Tooltip title=\"Timeline Settings\">\r\n                    <Button type=\"link\"\r\n                      onClick={() => { this.TimelineConfig.showModal() }}\r\n                      className=\"HQtimelineButtonUnit\"\r\n                    >\r\n                      <Icon type=\"setting\" className=\"HQbuttonText\" />\r\n                    </Button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Edit/Lock\">\r\n                    <Button type=\"link\"\r\n                      onClick={this.onEditClick.bind(this)}\r\n                      className=\"HQtimelineButtonUnit\"\r\n                    >\r\n                      <Icon type={editIcon} className=\"HQbuttonText\" />\r\n                    </Button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Play/Pause\">\r\n                    <Button type=\"link\"\r\n                      onClick={this.onPlayClick.bind(this)}\r\n                      className=\"HQtimelineButtonUnit\"\r\n                    >\r\n                      <Icon type={playIcon} className=\"HQbuttonText\" />\r\n                    </Button>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Capture Motor Positions\">\r\n                    <Button type=\"link\"\r\n                      onClick={this.onCaptureClick.bind(this)}\r\n                      className=\"HQtimelineButtonUnit\"\r\n                    >\r\n                      <Icon type=\"sync\" className=\"HQbuttonText\" />\r\n                    </Button>\r\n                  </Tooltip>\r\n                  <TimelineConfig onRef={ref => (this.TimelineConfig = ref)}\r\n                    saveTrigger={this.state.saveTrigger}\r\n                    clearTrigger={this.state.clearTrigger}\r\n                    getSaveTrigger={(val) => this.setState({ saveTrigger: val })}\r\n                    getClearTrigger={(val) => this.setState({ clearTrigger: val })}\r\n                  />\r\n                </div>\r\n                {/* {timelineTitle} */}\r\n                <div className=\"HQmoSelector\">\r\n                    <MoSelector\r\n                      size={componentSize}\r\n                      defaultUnit={activeUnit}\r\n                      allUnits={allUnits}\r\n                      getColors={this.getColors}\r\n                      getActiveUnit={(val) => this.setState({ activeUnit: val })}\r\n                    />\r\n                </div>\r\n              </Row>\r\n            </div>\r\n            <Row type=\"flex\" justify=\"start\" align=\"bottom\">\r\n              <Timeline\r\n                activeUnit={activeUnit}\r\n                allUnits={allUnits}\r\n                screen={this.props.screen}\r\n                steps={this.props.steps}\r\n                capture={this.state.capture}\r\n                inPointVal={this.state.dialPos}\r\n                makePlay={this.state.areTimelinesPlaying}\r\n                makeEdit={this.state.areTimelinesEditing}\r\n                makeClear={this.state.clearTrigger}\r\n                makeSave={this.state.saveTrigger}\r\n                makeCapture={this.state.captureTrigger}\r\n                colors={colors}\r\n                getActivePointVal={(val) => this.setState({ activePointVal: val })}\r\n              />\r\n            </Row>\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Hq;\r\n","import React, { Component } from 'react';\r\nimport './App.less';\r\nimport AppMenu from './components/menu';\r\nimport Hq from './components/hq';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      page: \"hq\",\r\n      screen: {\r\n        width: 0,\r\n        height: 0,\r\n      },\r\n      steps: 4096,\r\n    };\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n    setInterval(this.updateDimensions, 200);\r\n    this.updateDimensions();\r\n  }\r\n\r\n  updateDimensions() {\r\n    const { screen } = this.state;\r\n    if (screen.width !== window.innerWidth || screen.height !== window.innerHeight) {\r\n      this.setState({\r\n        screen: {\r\n          width: window.innerWidth,\r\n          height: window.innerHeight\r\n        }\r\n      });\r\n    }\r\n    // console.log(\"width: \" + window.innerWidth + \",  height: \" + window.innerHeight);\r\n  }\r\n\r\n  render() {\r\n    const { page, screen } = this.state;\r\n    let content;\r\n    if (page === \"hq\") {\r\n      content =\r\n        <Hq className=\"APhq\" unitId={2} allUnits={[1, 2, 6, 11, 19, 25]} screen={screen} steps={this.state.steps} />\r\n    }\r\n    else if (page === \"timelines\") {\r\n      content =\r\n        <div className=\"APtimelineContainer\">\r\n        </div>\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"APmenu\">\r\n          <AppMenu getChoice={(choice) => this.setState({ page: choice })} />\r\n        </div>\r\n        <div className=\"APoffset\"></div>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.less';\r\nimport App from './App';\r\n// import registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n// registerServiceWorker();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"analogReadButton_container__2IL9P\",\"buttonUnit\":\"analogReadButton_buttonUnit__314xk\",\"budge\":\"analogReadButton_budge__MA_4C\"};"],"sourceRoot":""}