{"version":3,"sources":["components/timeline.module.css","components/menu.module.css","components/toggle.module.css","components/analogWriteSlider.module.css","components/dial.module.css","dragData.js","components/menu.js","components/moSelector.js","components/toggle.js","components/analogWriteSlider.js","components/analogReadButton.js","components/dial.js","components/timeline.js","components/timelineConfig.js","components/hq.js","App.js","registerServiceWorker.js","index.js","components/analogReadButton.module.css"],"names":["module","exports","graphContainer","canvas","menu","container","element","scale","scaleX","type","stacked","initValue","SubMenu","AppMenu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","setState","current","key","props","getChoice","state","react_default","a","createElement","onClick","selectedKeys","mode","theme","className","classes","title","icon","ItemGroup","Item","href","target","rel","Component","MoSelector","onChange","idx","activeUnit","allUnits","getActiveUnit","originalElement","_this$props","colors","getColors","alt","style","color","fontSize","padding","pagination","pageSize","total","length","size","showLessItems","position","bottom","itemRender","bind","React","Toggle","checked","pinState","fetch","pin","unitId","then","res","json","data","console","log","isChecked","es_switch","AnalogWriteSlider","value","val","slider","vertical","max","defaultValue","AnalogReadButton","_this2","reply","params","es_button","buttonUnit","budge","hiGray","loGray","Dial","getMotiPos","motiPos","steps","isNaN","rotations","dialPos","lastDialVal","setInterval","Math","round","rollover","destination","speed","capture","checkRollover","getDialPos","moveIt","prevProps","prevState","incomingVal","_this$state","lastIncomingVal","_this$state2","dialPos360","getRangeValue","motiPos360","_this$props2","radius","topText","subText","dist","changeValue","strokeWidth","stroke","fill","r","x","y","textAnchor","dy","roundValue","pos","pow","calcPosition","chartInstance","datasetIndex","index","touches","scales","getValueForPixel","clientX","getBoundingClientRect","left","clientY","top","options","dragDataRound","min","datasets","dragX","updateData","callback","event","sourceEvent","_datasetIndex","_index","v","rScale","d","sqrt","xCenter","yCenter","scalingFactor","drawingArea","ticks","reverse","calcRadar","update","ChartJSdragDataPlugin","id","afterInit","dragData","select","chart","drag","on","activeLine","getElementsAtEvent","scaleName","config","_xScale","xAxes","newPos","curValue","getElement","onDragStart","onDrag","dragEndCallback","onDragEnd","Chart","pluginService","register","dragDisabled","midGray","Timeline","saveDatasets","datasetsToSave","myChart","forEach","dataset","objectSpread","toConsumableArray","localStorage","removeItem","setItem","JSON","stringify","_unused","clearDatasets","numPoints","map","label","Array","pointBackgroundColor","pointRadius","setPointsRadii","pointHitRadius","pointHoverRadius","pointHoverColor","borderColor","borderWidth","chartRef","createRef","activePoint","activePointVal","interval","intervalId","play","edit","assertThisInitialized","xLabels","from","i","toFixed","chartlines","createChartLines","isActiveDataset","_this2$props","indexOf","refToSetActivePoint","setActivePoint","refToSetActivePointValue","getActivePointVal","chartConfig","labels","backgroundColor","yAxes","scaleLabel","display","labelString","fontColor","stepSize","suggestedMax","suggestedMin","gridLines","animation","duration","legend","boxWidth","responsive","maintainAspectRatio","tooltips","intersect","hover","layout","right","myChartRef","getContext","pause","lock","parse","getItem","activeSetIndex","pointIndex","_this3","ds","unitIndex","_this4","nextActivePoint","clearInterval","_this$props3","makePlay","makeEdit","makeSave","makeClear","inPointVal","pointColors","row","justify","align","height","ref","TimelineConfig","showModal","visible","handleOk","handleCancel","onRef","undefined","saveTrigger","clearTrigger","modal","onOk","onCancel","getSaveTrigger","getClearTrigger","Hq","activeOpacity","arguments","inactiveOpacity","areTimelinesPlaying","areTimelinesEditing","screen","topRow","playIcon","editIcon","captureIcon","activeColor","toggle","analogReadButton","analogWriteSlider","dial","onCaptureClick","moSelector","defaultUnit","active","onPlayClick","onEditClick","timelineConfig","trigger","timeline_Timeline","apVal","App","page","window","innerHeight","width","innerWidth","updateDimensions","addEventListener","content","components_hq","components_menu","choice","removeEventListener","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","concat","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0ffec6c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphContainer\":\"timeline_graphContainer__1X6eL\",\"canvas\":\"timeline_canvas__2m7N9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"menu_menu__8vnjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"toggle_container__3VUN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"analogWriteSlider_container__Us8ZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dial_container__1ZnML\"};","import Chart from 'chart.js'\r\nimport { drag } from 'd3-drag'\r\nimport { select, event } from 'd3-selection'\r\n\r\nlet element, scale, scaleX, type, stacked, initValue\r\n\r\nfunction getElement (chartInstance, callback) {\r\n  return () => {\r\n    if (event) {\r\n      const e = event.sourceEvent\r\n      const activeLine = chartInstance.options.activeLine\r\n      element = chartInstance.getElementsAtEvent(e)[activeLine]\r\n    //   element = chartInstance.getElementAtEvent(e)[0]\r\n    //   console.log(\"active line: \" + activeLine);\r\n    //   console.log(element);\r\n      type = chartInstance.config.type\r\n      let scaleName = type === 'radar' ? '_scale' : '_yScale'\r\n      if (element) {\r\n        if (chartInstance.data.datasets[element._datasetIndex].dragData === false || element[scaleName].options.dragData === false) {\r\n          element = null\r\n          return\r\n        }\r\n        \r\n        scale = element[scaleName].id\r\n        if (element._xScale) {\r\n          scaleX = element._xScale.id\r\n        }\r\n        \r\n        if (type === 'bar' || type === 'horizontalBar') {\r\n          stacked = chartInstance.config.options.scales.xAxes[0].stacked\r\n          let data = {}\r\n          let datasetIndex = element._datasetIndex\r\n          let index = element._index\r\n          let newPos = calcPosition(e,chartInstance,datasetIndex,index,data)\r\n          let curValue = chartInstance.data.datasets[datasetIndex].data[index]\r\n          initValue = newPos - curValue\r\n        }\r\n\r\n        if (typeof callback === 'function' && element) {\r\n          if ( callback(e, element) === false) {\r\n            element = null\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction roundValue(value, pos) {\r\n  if (!isNaN(pos)) {\r\n    return Math.round(value * Math.pow(10, pos))/Math.pow(10, pos)\r\n  }\r\n  return value\r\n}\r\n\r\nfunction calcRadar(e,chartInstance) {\r\n  let x,y,v\r\n  if (e.touches) {\r\n    x = e.touches[0].clientX-chartInstance.canvas.getBoundingClientRect().left\r\n    y = e.touches[0].clientY-chartInstance.canvas.getBoundingClientRect().top\r\n  } else {\r\n    x = e.clientX - chartInstance.canvas.getBoundingClientRect().left\r\n    y = e.clientY - chartInstance.canvas.getBoundingClientRect().top\r\n  }\r\n  let rScale = chartInstance.scales[scale]\r\n  let d = Math.sqrt(Math.pow(x-rScale.xCenter, 2) + Math.pow(y-rScale.yCenter, 2))\r\n  let scalingFactor = rScale.drawingArea / (rScale.max - rScale.min)\r\n  if (rScale.options.ticks.reverse) {\r\n    v = rScale.max - (d / scalingFactor)\r\n  } else {\r\n    v = rScale.min + (d / scalingFactor)\r\n  }\r\n\r\n  v = roundValue(v, chartInstance.options.dragDataRound)\r\n\r\n  v = v > chartInstance.scale.max ? chartInstance.scale.max : v\r\n  v = v < chartInstance.scale.min ? chartInstance.scale.min : v\r\n\r\n  return v\r\n}\r\n\r\nfunction calcPosition(e,chartInstance,datasetIndex,index,data) {\r\n  let x,y\r\n  if (e.touches) {\r\n    x = chartInstance.scales[scaleX].getValueForPixel(e.touches[0].clientX-chartInstance.canvas.getBoundingClientRect().left)\r\n    y = chartInstance.scales[scale].getValueForPixel(e.touches[0].clientY-chartInstance.canvas.getBoundingClientRect().top)\r\n  } else {\r\n    x = chartInstance.scales[scaleX].getValueForPixel(e.clientX - chartInstance.canvas.getBoundingClientRect().left)\r\n    y = chartInstance.scales[scale].getValueForPixel(e.clientY - chartInstance.canvas.getBoundingClientRect().top)\r\n  }\r\n\r\n  x = roundValue(x, chartInstance.options.dragDataRound)\r\n  y = roundValue(y, chartInstance.options.dragDataRound)\r\n\r\n  x = x > chartInstance.scales[scaleX].max ? chartInstance.scales[scaleX].max : x\r\n  x = x < chartInstance.scales[scaleX].min ? chartInstance.scales[scaleX].min : x\r\n\r\n  y = y > chartInstance.scales[scale].max ? chartInstance.scales[scale].max : y\r\n  y = y < chartInstance.scales[scale].min ? chartInstance.scales[scale].min : y\r\n\r\n  if(chartInstance.data.datasets[datasetIndex].data[index].x && chartInstance.options.dragX) {\r\n    data.x = x\r\n  }\r\n\r\n  if(chartInstance.data.datasets[datasetIndex].data[index].y) {\r\n    data.y = y\r\n    return data\r\n  } else {\r\n    if (type === 'horizontalBar') {\r\n      return x\r\n    } else {\r\n      return y\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateData (chartInstance, callback) {\r\n  return () => {\r\n    if (element && event) {\r\n      const e = event.sourceEvent\r\n      const datasetIndex = element._datasetIndex\r\n      const index = element._index\r\n      \r\n      let data = chartInstance.data.datasets[datasetIndex].data[index]\r\n\r\n      if (type === 'radar') {\r\n        data = calcRadar(e,chartInstance)\r\n      } else if (stacked) {\r\n        let cursorPos = calcPosition(e,chartInstance,datasetIndex,index,data)\r\n        data = cursorPos - initValue\r\n      } else {\r\n        data = calcPosition(e,chartInstance,datasetIndex,index,data)\r\n      }\r\n\r\n      if (typeof callback === 'function') {\r\n        if ( callback(e, datasetIndex, index, data) !== false) {\r\n          chartInstance.data.datasets[datasetIndex].data[index] = data\r\n          chartInstance.update(0)\r\n        }\r\n      } else {\r\n        chartInstance.data.datasets[datasetIndex].data[index] = data\r\n        chartInstance.update(0)\r\n      }\r\n    }  \r\n  }\r\n}\r\n\r\nfunction dragEndCallback (chartInstance, callback) {\r\n  return () => {\r\n    if (typeof callback === 'function' && element) {\r\n      const e = event.sourceEvent\r\n      const datasetIndex = element._datasetIndex\r\n      const index = element._index\r\n      const value = chartInstance.data.datasets[datasetIndex].data[index]\r\n      return callback(e,datasetIndex,index,value)\r\n    }\r\n  }\r\n}\r\n\r\nconst ChartJSdragDataPlugin = {\r\n  id: 'dragdata',\r\n  afterInit: function(chartInstance) {\r\n    if (chartInstance.options.dragData) {\r\n      select(chartInstance.chart.canvas).call(\r\n        drag().container(chartInstance.chart.canvas)\r\n          .on('start', getElement(chartInstance, chartInstance.options.onDragStart))\r\n          .on('drag', updateData(chartInstance, chartInstance.options.onDrag))\r\n          .on('end', dragEndCallback(chartInstance,chartInstance.options.onDragEnd))\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nChart.pluginService.register(ChartJSdragDataPlugin)\r\n\r\nexport default ChartJSdragDataPlugin","import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport classes from './menu.module.css';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass AppMenu extends Component {\r\n  constructor() {\r\n    super();  \r\n    this.state = {\r\n      current: 'hq',\r\n    };\r\n  }\r\n\r\n  handleClick = e => {\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n    this.props.getChoice(e.key);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\" theme=\"dark\" className={classes.menu} >\r\n\r\n        <SubMenu\r\n          title={\r\n            <span className=\"submenu-title-wrapper\">\r\n              <Icon type=\"setting\" />\r\n              Mo Controls\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.ItemGroup>\r\n            <Menu.Item key=\"hq\">Unit HQ</Menu.Item>\r\n            <Menu.Item key=\"live\">Live Motion</Menu.Item>\r\n            <Menu.Item key=\"custom\">Custom Message</Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        <Menu.Item key=\"website\">\r\n          <a href=\"http://www.robotstack.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            RobotStack\r\n          </a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppMenu;\r\n","import React from 'react';\r\nimport { Pagination } from 'antd';\r\n// import './moSelector.less';\r\n\r\nclass MoSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeUnit: this.props.allUnits[0],\r\n            current: 1\r\n        };\r\n    };\r\n\r\n    itemRender(current, type, originalElement) {\r\n        const {allUnits, getColors} = this.props;\r\n        const {activeUnit} = this.state;\r\n        const idx = current-1;\r\n        const colors = getColors(allUnits, activeUnit, 1, 0.5);\r\n        // const {activeUnit} = this.state;\r\n        // const color = idx === allUnits.indexOf(activeUnit) ? colors[idx] : \"rgba(255, 255, 255, 0.65)\";\r\n        if (type === 'page') {\r\n            return <a alt={allUnits[idx]} style={{ color: colors[idx], fontSize: \".9em\", padding: \"0px\" }}>{allUnits[idx]}</a>\r\n        }\r\n        return originalElement;\r\n    }\r\n\r\n    onChange = (idx) => {\r\n        const {allUnits} = this.props;\r\n        const activeUnit = allUnits[idx-1];\r\n        this.setState({\r\n            activeUnit: activeUnit,\r\n            current: idx,\r\n        });\r\n        this.props.getActiveUnit(activeUnit);\r\n    };\r\n\r\n    render() {\r\n        const { allUnits } = this.props;\r\n        const { current } = this.state;\r\n        return <Pagination \r\n        current={current} \r\n        pageSize={1} \r\n        onChange={this.onChange} \r\n        total={allUnits.length} \r\n        size=\"small\" \r\n        showLessItems={true}\r\n        // showTitle=\"false\"\r\n        // hideOnSinglePage={true}\r\n        style={{ position: \"relative\", bottom: \"1px\" }}\r\n        itemRender={this.itemRender.bind(this)} />;\r\n    }\r\n}\r\n\r\nexport default MoSelector;\r\n","import React, { Component } from 'react';\r\nimport classes from './toggle.module.css';\r\nimport {Switch} from \"antd\";\r\n\r\nclass Toggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: false\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    const pinState = this.state.checked ? 1 : 0;    \r\n    fetch('/digitalwrite/' + this.props.pin + '/' + pinState + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));\r\n  };\r\n\r\n  onChange(isChecked) {\r\n    const pinState = isChecked ? 1 : 0;\r\n    fetch('/digitalwrite/' + this.props.pin + '/' + pinState + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));  \r\n    this.setState({\r\n      checked: isChecked\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.container} >\r\n        <Switch \r\n          onChange={this.onChange.bind(this)} \r\n          checked={this.state.checked}\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n      \r\n    );\r\n  };\r\n};\r\n\r\nexport default Toggle;\r\n","import React, { Component } from 'react';\r\nimport classes from './analogWriteSlider.module.css';\r\nimport {Slider} from \"antd\";\r\n\r\nclass AnalogWriteSlider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('/analogwrite/' + this.props.pin + '/' + this.state.value + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));\r\n  };\r\n\r\n  onChange(val) {\r\n    fetch('/analogwrite/' + this.props.pin + '/' + val + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));  \r\n    this.setState({\r\n      value: val\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={ classes.container }>\r\n        <Slider \r\n          vertical \r\n          max={255} \r\n          defaultValue={this.state.value}\r\n          onChange={this.onChange.bind(this)} \r\n        />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default AnalogWriteSlider;\r\n","import React, { Component } from 'react';\r\nimport classes from './analogReadButton.module.css';\r\nimport { Button } from \"antd\";\r\n\r\nclass AnalogReadButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"click\"\r\n    };\r\n  };\r\n\r\n  onClick() {\r\n    fetch('/analogread/' + this.props.pin + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => { \r\n        console.log(data);\r\n        if(data.reply){\r\n          this.setState({ value: data.reply.params });\r\n        }\r\n      });  \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.container}>\r\n        <Button \r\n          size=\"small\" \r\n          onClick={this.onClick.bind(this)}\r\n          className={classes.buttonUnit}\r\n          >\r\n          <span className={classes.budge}>{this.state.value}</span>\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default AnalogReadButton;\r\n","import React, { Component } from 'react';\r\nimport classes from \"./dial.module.css\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { CircularInput, CircularTrack, CircularProgress, CircularThumb } from 'react-circular-input'\r\n// import { Button, Icon } from 'antd';\r\n// const hiBlue = \"rgb(61, 153, 255)\";\r\nconst hiGray = \"rgba(255, 255, 255, 0.65)\"\r\n// const midGray = \"rgba(255, 255, 255, 0.45)\"\r\nconst loGray = \"rgba(255, 255, 255, 0.2)\"\r\n\r\nclass Dial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rotations: 0,\r\n      dialPos: 0,\r\n      lastDialVal: 0,\r\n      motiPos: 0,\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMotiPos();\r\n    setInterval( this.getMotiPos, 250 ); \r\n  };\r\n\r\n  getMotiPos = () => (fetch('/get/R_PRESENT_POSITION/1/' + this.props.unitId + '/')\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    if (data.reply.params) {\r\n      const motiPos = data.reply.params[0] / this.props.steps;\r\n      if (motiPos !== null && isNaN(motiPos) === false) {\r\n        this.setState({ motiPos: motiPos });\r\n      }\r\n    }\r\n  }))\r\n\r\n  getRangeValue(val) {\r\n    const rangeValue = Math.round(val * 360);\r\n    return rangeValue;\r\n  }\r\n\r\n  checkRollover(val) {\r\n    let rollover = 0;\r\n    const thresh = .8;\r\n    const lastDialVal = this.state.lastDialVal;\r\n    if (val < (lastDialVal - thresh)) {\r\n      rollover = 1;\r\n    }\r\n    else if (val > (lastDialVal + thresh)) {\r\n      rollover = -1;\r\n    }\r\n    return rollover;\r\n  }\r\n\r\n  moveIt() {\r\n    let destination = this.state.dialPos * this.props.steps;\r\n    fetch('/rotateTo/' + destination + '/' + this.props.speed + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => {\r\n        console.log(data);\r\n      });\r\n  }\r\n\r\n  changeValue(val) {\r\n    if (this.props.capture) {\r\n      // ignore user input if capturing with motor \r\n    }\r\n    else {\r\n      const rotations = this.state.rotations + this.checkRollover(val);\r\n      const dialPos = (val + rotations);\r\n      this.setState({\r\n        lastDialVal: val,\r\n        rotations: rotations,\r\n        dialPos: dialPos,\r\n      });\r\n      this.props.getDialPos(dialPos);\r\n      this.moveIt();\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const {incomingVal, capture, getDialPos} = this.props;\r\n    const {motiPos, dialPos} = this.state;\r\n    if (incomingVal !== null && incomingVal !== prevProps.incomingVal) {\r\n      this.setState({\r\n        dialPos: incomingVal,\r\n        lastIncomingVal: incomingVal\r\n      });\r\n      if (capture == false) {\r\n        // ignore dial input if capturing from motor \r\n        this.moveIt();\r\n      }\r\n    }\r\n    if(capture && motiPos !== prevState.motiPos) {\r\n      this.setState({\r\n        dialPos: motiPos,\r\n        lastDialVal: motiPos,\r\n      })\r\n    }\r\n    if(dialPos !== prevState.dialPos) {\r\n      getDialPos((motiPos));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { motiPos, dialPos } = this.state;\r\n    // const dialPos = capture ? motiPos : this.state.dialPos;\r\n    let dialPos360 = this.getRangeValue(dialPos);\r\n    let motiPos360 = this.getRangeValue(motiPos);\r\n    const { radius, capture } = this.props;\r\n    const topText = capture ? \"(\" + motiPos360 + \"°)\" : dialPos360 + \"° \";\r\n    const subText = capture ? \"\" : \"(\" + motiPos360 + \"°)\";\r\n    return (\r\n      <div className={classes.container}>\r\n        <CircularInput onChange={this.changeValue.bind(this)} value={dialPos} radius={radius}>\r\n          <CircularTrack strokeWidth={4} stroke={loGray} />\r\n          <CircularProgress strokeWidth={0} stroke={loGray} />\r\n          <CircularThumb strokeWidth={1} stroke={loGray} fill={hiGray} r={10} />\r\n          {/* range value in center */}\r\n          <text x={radius} y={radius} textAnchor=\"middle\" dy=\"0.3em\" fill={hiGray}>\r\n            {topText}\r\n          </text>\r\n          <text x={radius} y={radius + 16} textAnchor=\"middle\" fontSize=\"10px\" fill={loGray}>\r\n            {subText}\r\n          </text>\r\n        </CircularInput>\r\n        <br />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Dial;\r\n","import React, { Component } from 'react'\r\nimport Chart from \"chart.js\";\r\n// chartjs-plugin-dragdata requires full path??\r\n// import 'chartjs-plugin-dragdata/dist/chartjs-plugin-dragdata.min.js';\r\nimport '../dragData';\r\nimport classes from \"./timeline.module.css\";\r\nimport { Row } from 'antd';\r\n// import fs from 'fs';\r\nimport darkTheme from \"@ant-design/dark-theme\";\r\nimport \"./pointColors.less\";\r\nimport { all } from 'q';\r\n\r\nlet dragDisabled = true;\r\nconst hiBlue = \"rgb(61, 153, 255)\";\r\nconst loBlue = \"rgba(61, 153, 255, 0.65)\";\r\nconst hiGray = \"rgba(255, 255, 255, 0.65)\"\r\nconst midGray = \"rgba(255, 255, 255, 0.45)\"\r\nconst loGray = \"rgba(255, 255, 255, 0.2)\"\r\n\r\nexport default class Timeline extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chartRef = React.createRef();\r\n        this.state = {\r\n            \"numPoints\": 10,\r\n            \"activePoint\": 0,\r\n            \"activePointVal\": null,\r\n            \"interval\": 2000,\r\n            \"intervalId\": null,\r\n            \"play\": false,\r\n            \"edit\": false,\r\n        }\r\n        this.saveDatasets.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {numPoints, interval} = this.state;\r\n        const xLabels = Array.from({ length: numPoints }, (e, i) => (i * interval/1000).toFixed(2));\r\n        const chartlines = this.createChartLines();\r\n        const isActiveDataset = (datasetIndex) => {\r\n            const {allUnits, activeUnit} = this.props;\r\n            let isActiveDataset = false;\r\n            if(datasetIndex === allUnits.indexOf(activeUnit)) {\r\n                isActiveDataset = true;\r\n            }\r\n            return isActiveDataset;\r\n        }\r\n        const refToSetActivePoint = (idx) => this.setActivePoint(idx);\r\n        const refToSetActivePointValue = (val) => {\r\n            this.setState({ activePointVal: val });\r\n            this.props.getActivePointVal(val);\r\n        }\r\n        const chartConfig = {\r\n            type: \"line\",\r\n            data: {\r\n                labels: xLabels,\r\n                datasets: chartlines,\r\n                backgroundColor: \"rgba(0,0,0,0)\",\r\n            },\r\n            options: {\r\n                //Customize chart options\r\n                dragData: true,\r\n                dragX: false,\r\n                dragDataRound: 0, \r\n                activeLine: 0,\r\n                onDragStart: function (e, element) {\r\n                    const idx = element._index;  \r\n                    refToSetActivePoint(idx);\r\n                    if (dragDisabled || !isActiveDataset(element._datasetIndex)) return false\r\n                },\r\n                onDrag: function (e, datasetIndex, index, value) {\r\n                    if(isActiveDataset(datasetIndex)) {\r\n                        refToSetActivePoint(index);                    \r\n                        refToSetActivePointValue(value / 360);\r\n\r\n                    }\r\n                },\r\n                onDragEnd: function (e, datasetIndex, index, value) {\r\n                    if(isActiveDataset(datasetIndex)) {\r\n                        refToSetActivePoint(index);                    \r\n                        refToSetActivePointValue(value / 360);\r\n                    }\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: \"degrees\",\r\n                            fontColor: midGray,\r\n                            padding: 0,\r\n                        },\r\n                        ticks: {\r\n                            stepSize: 360,\r\n                            suggestedMax: 360*3,\r\n                            suggestedMin: -360*3,\r\n                            padding: 0,\r\n                            fontColor: midGray,\r\n                            fontSize: 11,\r\n                        },\r\n                        gridLines: {\r\n                            // display: false,\r\n                            color: loGray,\r\n                        },\r\n                    }],\r\n                    xAxes: [{\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: \"seconds\",\r\n                            fontColor: midGray,\r\n                        },\r\n                        ticks: {\r\n                            fontColor: midGray,\r\n                            fontSize: 11,                            \r\n                        },\r\n                        gridLines: {\r\n                            // display: false,\r\n                            color: loGray,\r\n                        },\r\n                    }],\r\n                },\r\n                animation: {\r\n                    duration: this.state.interval / 2\r\n                },\r\n                legend: {\r\n                    display: false,\r\n                    labels: {\r\n                        boxWidth: 0,\r\n                    }\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                tooltips: {\r\n                    mode: \"nearest\",\r\n                    intersect: true,\r\n                    // axis: \"x\"\r\n                },\r\n                hover: {\r\n                    mode: \"nearest\",\r\n                    intersect: true,\r\n                    // axis: \"x\"\r\n                },\r\n                // onClick: (e, item) => console.log(\"onClick: \" + item[0]._datasetIndex),\r\n                layout: {\r\n                    padding: {\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0\r\n                    }\r\n                },\r\n            }\r\n        }\r\n        this.myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        this.myChart = new Chart(this.myChartRef, chartConfig);\r\n        this.pause();\r\n        this.lock();     \r\n        setInterval(this.saveDatasets, 10000);\r\n    }\r\n\r\n    setPointsRadii(numPoints, activePoint) {\r\n        return Array.from({ length: numPoints }, (e, i) => i === activePoint ? 8 : 4);\r\n    }\r\n\r\n    createChartLines() {\r\n        let datasets = JSON.parse(localStorage.getItem(\"storedDatasets\"));\r\n        if(!datasets) {\r\n            datasets = this.clearDatasets();\r\n        }\r\n        return datasets\r\n    }\r\n\r\n    saveDatasets = () => {\r\n        try {\r\n            let datasetsToSave = [];\r\n            this.myChart.data.datasets.forEach((dataset, idx) => {\r\n                datasetsToSave[idx] = {...dataset};\r\n                delete datasetsToSave[idx][\"_meta\"];\r\n                datasetsToSave[idx].data = [...dataset.data];\r\n            });\r\n            localStorage.removeItem(\"storedDatasets\");\r\n            localStorage.setItem(\"storedDatasets\", JSON.stringify(datasetsToSave));\r\n        }\r\n        catch {\r\n            console.log(\"failed save\");\r\n        }\r\n    }\r\n\r\n    clearDatasets = () => {\r\n        const {allUnits, colors} = this.props;\r\n        const {numPoints} = this.state;\r\n        const datasets = allUnits.map( (id, idx) => {\r\n            const data = new Array(numPoints).fill(idx * 90);\r\n            const pointColors = new Array(numPoints).fill(colors[idx]);  \r\n            return {\r\n                id: id,\r\n                label: \"MO\" + id,\r\n                data: data,\r\n                pointBackgroundColor: pointColors,\r\n                pointRadius: this.setPointsRadii(numPoints, 0),\r\n                radius: 4,\r\n                pointHitRadius: 25,\r\n                pointHoverRadius: 8,\r\n                pointHoverColor: \"#FFF\",\r\n                borderColor: colors[idx],\r\n                borderWidth: 1,\r\n                fill: false,\r\n            }\r\n        });\r\n        console.log(\"new datasets\");\r\n        this.saveDatasets();\r\n        return datasets;\r\n    }\r\n\r\n    nextActivePoint() {\r\n        const {allUnits, activeUnit} = this.props;\r\n        const activeSetIndex = allUnits.indexOf(activeUnit);\r\n        const numPoints = this.myChart.data.datasets[activeSetIndex].data.length;\r\n        let idx = (this.state.activePoint + 1) >= numPoints ? 0 : this.state.activePoint + 1;\r\n        this.setActivePoint(idx);\r\n    }\r\n\r\n    moveIt(destination, unitId) {\r\n        if(this.state.play) {\r\n            fetch('/rotateTo/' + destination + '/' + 255 + '/' + unitId + '/' )\r\n                .then(res => res.json()).then(data => { \r\n                  console.log(data);\r\n                });           \r\n        }\r\n    }\r\n\r\n    setActivePoint(pointIndex) {\r\n        this.setState({ activePoint: pointIndex });\r\n        const {allUnits} = this.props;\r\n        const {numPoints} = this.state;\r\n        // const activeSetIndex = allUnits.indexOf(activeUnit);\r\n        this.myChart.data.datasets.forEach( ds => {ds.pointRadius = this.setPointsRadii(numPoints, pointIndex)});\r\n        this.myChart.update(); \r\n        allUnits.forEach( (unitId, unitIndex) => {\r\n            const destination = this.myChart.data.datasets[unitIndex].data[pointIndex] / 360 * this.props.steps;\r\n            this.moveIt(destination, unitId);\r\n        });\r\n        // this.moveIt(destination, activeUnit);\r\n    }\r\n\r\n    edit() {\r\n        // console.log(\"edit\");\r\n        this.pause();\r\n        this.setState({ edit: true });\r\n        this.setActivePoint(0);\r\n        dragDisabled = false;\r\n    }\r\n\r\n    lock() {\r\n        // console.log(\"lock\");\r\n        this.setState({ edit: false });\r\n        dragDisabled = true;\r\n    }    \r\n\r\n    play() {\r\n        // console.log(\"play\");\r\n        this.lock();\r\n        this.setState({ play: true });\r\n        const intervalId = setInterval(() => this.nextActivePoint(), this.state.interval);\r\n        this.setState({ intervalId: intervalId });\r\n    }\r\n\r\n    pause() {\r\n        // console.log(\"pause\");\r\n        this.setState({ play: false });\r\n        const intervalId = this.state.intervalId;\r\n        if(intervalId){\r\n            clearInterval(intervalId);\r\n        }\r\n        this.setState({ intervalId: null });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const {makePlay, makeEdit, makeSave, makeClear, allUnits, activeUnit, inPointVal, colors} = this.props;\r\n        const activeSetIndex = allUnits.indexOf(activeUnit);\r\n        if(makePlay !== prevProps.makePlay) {\r\n            makePlay ? this.play() : this.pause();        \r\n        }\r\n        if(makeEdit !== prevProps.makeEdit) {\r\n            makeEdit ? this.edit() : this.lock();        \r\n        }\r\n        if(makeSave !== prevProps.makeSave) {\r\n            this.saveDatasets();\r\n        }\r\n        if(makeClear !== prevProps.makeClear) {\r\n            this.myChart.data.datasets = this.clearDatasets();\r\n            this.myChart.update();   \r\n            this.saveDatasets();\r\n        }\r\n        if(inPointVal != null && inPointVal !== prevProps.inPointVal) {\r\n            if(makeEdit) {\r\n                const {activePoint} = this.state;\r\n                this.myChart.data.datasets[activeSetIndex].data[activePoint] = inPointVal * 360;\r\n                this.myChart.update();    \r\n                this.setState({ activePointVal: inPointVal });\r\n            }      \r\n        } \r\n        if(activeUnit !== prevProps.activeUnit) {\r\n            const idx = allUnits.indexOf(activeUnit);\r\n            this.myChart.options.activeLine = idx;\r\n            // console.log(\"new active: \" + idx);\r\n        }\r\n        if(colors !== prevProps.colors) {\r\n            const {numPoints} = this.state;\r\n            this.myChart.data.datasets.forEach( (dataset, idx) => {\r\n                const pointColors = new Array(numPoints).fill(colors[idx]);  \r\n                dataset.pointBackgroundColor = pointColors;\r\n                dataset.borderColor = colors[idx];\r\n            });\r\n            this.myChart.update();\r\n        }\r\n    }\r\n\r\n    render() {       \r\n        return (\r\n            <div className={classes.graphContainer}>\r\n                <Row type=\"flex\" justify=\"start\" align=\"top\">\r\n                    <canvas\r\n                        height=\"200px\"\r\n                        id=\"myChart\"\r\n                        ref={this.chartRef}\r\n                        className={classes.canvas}\r\n                    />\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, Button, Icon } from 'antd';\r\n\r\nclass TimelineConfig extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            visible: false,\r\n        };\r\n    }\r\n        \r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(undefined)\r\n    }\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {saveTrigger, clearTrigger} = this.props;\r\n        // const saveTrigger = this.props.saveTrigger + 1;\r\n        // const clearTrigger = this.props.clearTrigger + 1;\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    title=\"Timeline Settings\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <Button type=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => this.props.getSaveTrigger(saveTrigger + 1)}\r\n                        // className=\"HQtimelineButtonUnit\"\r\n                    >\r\n                        save\r\n                        {/* <Icon type=\"setting\" className=\"HQbuttonText\" /> */}\r\n                    </Button>\r\n                    &nbsp;\r\n                    <Button type=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => this.props.getClearTrigger(clearTrigger + 1)}\r\n                        // onClick={() => { }}\r\n                        // className=\"HQtimelineButtonUnit\"\r\n                    >\r\n                        clear\r\n                        {/* <Icon type=\"setting\" className=\"HQbuttonText\" /> */}\r\n                    </Button>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TimelineConfig;\r\n","import React, { Component } from 'react';\r\nimport MoSelector from './moSelector';\r\nimport Toggle from './toggle';\r\nimport AnalogWriteSlider from './analogWriteSlider';\r\nimport AnalogReadButton from './analogReadButton'\r\nimport Dial from \"./dial\";\r\nimport Timeline from \"./timeline\";\r\nimport TimelineConfig from \"./timelineConfig\"\r\nimport { Row, Button, Icon } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport './hq.less';\r\n\r\n// const hiGray = \"rgba(255, 255, 255, 0.65)\"\r\n\r\nclass Hq extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeUnit: 1,\r\n      capture: false,\r\n      dialPos: 0,\r\n      activePointVal: null,\r\n      areTimelinesPlaying: false,\r\n      areTimelinesEditing: false,\r\n      saveTrigger: false,\r\n      clearTrigger: false,\r\n      colors: this.getColors(this.props.allUnits, 1)\r\n    };\r\n  }\r\n\r\n  // getColors(allUnits, activeUnit) {\r\n  //   let colors = allUnits.map((id, idx) => {\r\n  //     const opacity = id === activeUnit ? 1 : 0.25;\r\n  //     return \"hsla(\" + ((idx) * 56 + 0) % 360 + \", 100%, 70%, \" + opacity + \")\";\r\n  //   });\r\n  //   // console.log(colors);\r\n  //   return colors;\r\n  // }\r\n\r\n  getColors = (allUnits, activeUnit, activeOpacity = 1, inactiveOpacity = 0.2) => {\r\n    let colors = allUnits.map((id, idx) => {\r\n      const opacity = id === activeUnit ? activeOpacity : inactiveOpacity;\r\n      return \"hsla(\" + ((idx) * 56 + 0) % 360 + \", 100%, 70%, \" + opacity + \")\";\r\n    });\r\n    // console.log(colors);\r\n    return colors;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { allUnits, screen } = this.props;\r\n    const { activeUnit } = this.state;\r\n    if (allUnits !== prevProps.allUnits || activeUnit !== prevState.activeUnit) {\r\n      const colors = this.getColors(allUnits, activeUnit);\r\n      this.setState({ colors: colors });\r\n    }\r\n    if (screen !== prevProps.screen) {\r\n      // console.log(\"width = \" + screen.width + \", height = \" + screen.height);\r\n    }\r\n  }\r\n\r\n  onCaptureClick() {\r\n    const capture = !this.state.capture;\r\n    this.setState({ capture: capture });\r\n    if (capture) {\r\n      // console.log(\"idle\");\r\n      fetch('/rotate/0/0/' + this.state.activeUnit + '/')\r\n        .then(res => res.json()).then(data => {\r\n          // console.log(data);\r\n        });\r\n    }\r\n  }\r\n\r\n  onPlayClick() {\r\n    this.setState({ areTimelinesPlaying: !this.state.areTimelinesPlaying });\r\n  }\r\n\r\n  onEditClick() {\r\n    this.setState({ areTimelinesEditing: !this.state.areTimelinesEditing });\r\n  }\r\n\r\n  render() {\r\n    const { activeUnit, colors } = this.state;\r\n    const { allUnits, screen } = this.props;\r\n    const playState = this.state.areTimelinesPlaying;\r\n    let playIcon = playState === false ? \"play-circle\" : \"pause-circle\";\r\n    const editState = this.state.areTimelinesEditing;\r\n    let editIcon = editState === false ? \"edit\" : \"lock\";\r\n    const captureIcon = this.state.capture ? \"vertical-align-top\" : \"vertical-align-bottom\";\r\n    const activeColor = colors[allUnits.indexOf(activeUnit)];\r\n    let topRow;\r\n    if (screen) {\r\n      if (screen.height > 300) {\r\n        topRow =\r\n          <div className=\"HQtopContainer\">\r\n            {/* <Row type=\"flex\" justify=\"space-around\" align=\"bottom\"> */}\r\n            <div className=\"HQpinBox\">\r\n              <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                <div className=\"HQpinUnit\">\r\n                  p10 <Toggle unitId={activeUnit} pin={10} />\r\n                </div>\r\n              </Row>\r\n              <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                <div className=\"HQpinUnit\">\r\n                  p11 <Toggle unitId={activeUnit} pin={11} />\r\n                </div>\r\n              </Row>\r\n              <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                <div className=\"HQpinUnit\">\r\n                  p12 <Toggle unitId={activeUnit} pin={12} />\r\n                </div>\r\n              </Row>\r\n              <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                <div className=\"HQpinUnit\">\r\n                  p13 <Toggle unitId={activeUnit} pin={13} />\r\n                </div>\r\n              </Row>\r\n              <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                <div className=\"HQpinUnit\">\r\n                  a3 <AnalogReadButton unitId={activeUnit} pin={17} />\r\n                </div>\r\n              </Row>\r\n              <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                <div className=\"HQpinUnit\">\r\n                  a4 <AnalogReadButton unitId={activeUnit} pin={18} />\r\n                </div>\r\n              </Row>\r\n            </div>\r\n            <div className=\"HQvSliderBox\" >\r\n              <div className=\"HQvSliderUnit\">\r\n                <AnalogWriteSlider unitId={activeUnit} pin={14} />\r\n                <br />\r\n                <span className=\"HQvSliderTitle\">a0</span>\r\n              </div>\r\n              <div className=\"HQvSliderUnit\">\r\n                <AnalogWriteSlider unitId={activeUnit} pin={15} />\r\n                <br />\r\n                <span className=\"HQvSliderTitle\">a1</span>\r\n              </div>\r\n              <div className=\"HQvSliderUnit\">\r\n                <AnalogWriteSlider unitId={activeUnit} pin={16} />\r\n                <br />\r\n                <span className=\"HQvSliderTitle\">a2</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"HQdialBox\">\r\n              <Dial\r\n                unitId={activeUnit}\r\n                steps={this.props.steps}\r\n                radius={50}\r\n                speed={255}\r\n                capture={this.state.capture}\r\n                getDialPos={(dialPos) => this.setState({ dialPos: dialPos })}\r\n                incomingVal={this.state.activePointVal}\r\n              />\r\n              <Button type=\"link\"\r\n                onClick={this.onCaptureClick.bind(this)}\r\n                className=\"HQcaptureIconUnit\"\r\n              >\r\n                <Icon type={captureIcon} className=\"HQcaptureButtonText\" style={{ color: activeColor }} />\r\n              </Button>\r\n              <span className=\"HQpageTitle\">MO:{activeUnit}</span>\r\n            </div>\r\n            {/* </Row> */}\r\n          </div>\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"HQcontainer\">\r\n        {topRow}\r\n        <Row type=\"flex\" justify=\"start\" align=\"top\">\r\n          <div className=\"HQtimelineBox\">\r\n            <div className=\"HQtimelineButtonRow\">\r\n              <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n                <div className=\"HQmoSelector\">\r\n                  {/* <Button type=\"link\"\r\n                    // onClick={this.onEditClick.bind(this)}\r\n                    className=\"HQtimelineButtonUnit\"\r\n                  >\r\n                  <Icon type=\"sync\" className=\"HQbuttonText\" />\r\n                  </Button> */}\r\n                  <MoSelector\r\n                    defaultUnit={activeUnit}\r\n                    allUnits={allUnits}\r\n                    getActiveUnit={(active) => this.setState({ activeUnit: active })}\r\n                    getColors={this.getColors}\r\n                  // style={{ display: inline }}\r\n                  />\r\n                </div>\r\n                <div className=\"HQtimelineButtonBox\">\r\n                  <Button type=\"link\"\r\n                    onClick={this.onPlayClick.bind(this)}\r\n                    className=\"HQtimelineButtonUnit\"\r\n                  >\r\n                    <Icon type={playIcon} className=\"HQbuttonText\" />\r\n                  </Button>\r\n                  <Button type=\"link\"\r\n                    onClick={this.onEditClick.bind(this)}\r\n                    className=\"HQtimelineButtonUnit\"\r\n                  >\r\n                    <Icon type={editIcon} className=\"HQbuttonText\" />\r\n                  </Button>\r\n                  <Button type=\"link\"\r\n                    onClick={() => { this.TimelineConfig.showModal() }}\r\n                    className=\"HQtimelineButtonUnit\"\r\n                  >\r\n                    <Icon type=\"setting\" className=\"HQbuttonText\" />\r\n                  </Button>\r\n                  <TimelineConfig onRef={ref => (this.TimelineConfig = ref)}\r\n                    saveTrigger={this.state.saveTrigger}\r\n                    clearTrigger={this.state.clearTrigger}\r\n                    getSaveTrigger={(trigger) => this.setState({ saveTrigger: trigger })}\r\n                    getClearTrigger={(trigger) => this.setState({ clearTrigger: trigger })}\r\n                  />\r\n                </div>\r\n              </Row>\r\n            </div>\r\n            <Row type=\"flex\" justify=\"start\" align=\"bottom\">\r\n              <Timeline\r\n                activeUnit={activeUnit}\r\n                allUnits={allUnits}\r\n                steps={this.props.steps}\r\n                capture={this.state.capture}\r\n                getActivePointVal={(apVal) => this.setState({ activePointVal: apVal })}\r\n                inPointVal={this.state.dialPos}\r\n                makePlay={this.state.areTimelinesPlaying}\r\n                makeEdit={this.state.areTimelinesEditing}\r\n                makeClear={this.state.clearTrigger}\r\n                makeSave={this.state.saveTrigger}\r\n                colors={colors}\r\n              />\r\n            </Row>\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Hq;\r\n","import React, { Component } from 'react';\r\nimport './App.less';\r\nimport AppMenu from './components/menu';\r\nimport Hq from './components/hq';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      page: \"hq\",\r\n      height: window.innerHeight, \r\n      width: window.innerWidth,\r\n      steps: 4096,\r\n    };\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n    this.updateDimensions();\r\n  }\r\n\r\n  updateDimensions() {\r\n    this.setState({\r\n      screen: {\r\n        height: window.innerHeight, \r\n        width: window.innerWidth\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {page, screen} = this.state;\r\n    let content;\r\n    if(page === \"hq\") {\r\n      content =           \r\n        <Hq className=\"APhq\" unitId={2} allUnits={[1, 2, 3, 6, 8, 11, 14, 15, 19, 22, 24, 25]} screen={screen} steps={this.state.steps} />\r\n    }\r\n    else if(page === \"timelines\") {\r\n      content = \r\n        <div className=\"APtimelineContainer\">\r\n        </div>\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"APmenu\">\r\n          <AppMenu getChoice={ (choice) => this.setState({ page: choice }) } />\r\n        </div>\r\n        <div className=\"APoffset\"></div>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }  \r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.less';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"analogReadButton_container__2IL9P\",\"buttonUnit\":\"analogReadButton_buttonUnit__314xk\",\"budge\":\"analogReadButton_budge__MA_4C\"};"],"sourceRoot":""}