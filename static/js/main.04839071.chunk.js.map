{"version":3,"sources":["components/timeline.module.css","components/menu.module.css","components/toggle.module.css","components/analogWriteSlider.module.css","components/dial.module.css","dragData.js","components/menu.js","components/moSelector.js","components/toggle.js","components/analogWriteSlider.js","components/analogReadButton.js","components/dial.js","components/timeline.js","components/timelineConfig.js","components/console.js","components/hq.js","App.js","registerServiceWorker.js","index.js","components/analogReadButton.module.css"],"names":["module","exports","graphContainer","canvas","menu","container","element","scale","scaleX","type","stacked","initValue","SubMenu","AppMenu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","setState","current","key","props","getChoice","state","react_default","a","createElement","onClick","selectedKeys","mode","theme","className","classes","title","style","color","icon","ItemGroup","Item","href","target","rel","Component","MoSelector","onChange","idx","activeUnit","allUnits","getActiveUnit","originalElement","_this$props","colors","getColors","alt","fontSize","padding","pagination","pageSize","total","length","size","showLessItems","position","bottom","itemRender","bind","React","Toggle","checked","pinState","fetch","pin","unitId","then","res","json","data","console","log","isChecked","es_switch","AnalogWriteSlider","value","val","slider","vertical","max","defaultValue","AnalogReadButton","_this2","reply","params","es_button","buttonUnit","budge","hiGray","loGray","Dial","getMotiPos","motiPos","steps","isNaN","catch","err","rotations","dialPos","lastDialVal","setInterval","Math","round","rollover","destination","speed","capture","checkRollover","getDialPos","moveIt","prevProps","prevState","incomingVal","_this$state","lastIncomingVal","_this$state2","dialPos360","getRangeValue","motiPos360","_this$props2","radius","topText","subText","dist","changeValue","strokeWidth","stroke","fill","r","x","y","textAnchor","dy","roundValue","pos","pow","calcPosition","chartInstance","datasetIndex","index","touches","scales","getValueForPixel","clientX","getBoundingClientRect","left","clientY","top","options","dragDataRound","min","datasets","dragX","updateData","callback","event","sourceEvent","_datasetIndex","_index","v","rScale","d","sqrt","xCenter","yCenter","scalingFactor","drawingArea","ticks","reverse","calcRadar","update","ChartJSdragDataPlugin","id","afterInit","dragData","select","chart","drag","on","activeLine","getElementsAtEvent","scaleName","config","_xScale","xAxes","newPos","curValue","getElement","onDragStart","onDrag","dragEndCallback","onDragEnd","Chart","pluginService","register","dragDisabled","midGray","Timeline","saveDatasets","datasetsToSave","myChart","forEach","dataset","objectSpread","toConsumableArray","localStorage","removeItem","setItem","JSON","stringify","_unused","clearDatasets","numPoints","map","label","Array","pointBackgroundColor","pointRadius","setPointsRadii","pointHitRadius","pointHoverRadius","pointHoverColor","borderColor","borderWidth","chartRef","createRef","activePoint","activePointVal","interval","intervalId","play","edit","assertThisInitialized","xLabels","from","i","toFixed","chartlines","createChartLines","isActiveDataset","_this2$props","indexOf","refToSetActivePoint","setActivePoint","refToSetActivePointValue","getActivePointVal","chartConfig","labels","backgroundColor","yAxes","scaleLabel","display","labelString","fontColor","stepSize","suggestedMax","suggestedMin","gridLines","animation","duration","legend","boxWidth","responsive","maintainAspectRatio","tooltips","intersect","hover","layout","right","myChartRef","getContext","pause","lock","parse","getItem","activeSetIndex","pointIndex","_this3","ds","unitIndex","_this4","nextActivePoint","clearInterval","_this$props3","makePlay","makeEdit","makeSave","makeClear","inPointVal","pointColors","row","justify","align","height","ref","TimelineConfig","showModal","visible","handleOk","handleCancel","onRef","undefined","saveTrigger","clearTrigger","modal","onOk","onCancel","getSaveTrigger","getClearTrigger","globalStyle","background","width","minHeight","minWidth","contentStyle","inputStyle","promptLabelStyle","Console","commands","echo","description","usage","fn","concat","arguments","join","man","digitalWrite","wait","terminal","setTimeout","pushToStdout","Terminal_default","assign","welcomeMessage","promptLabel","Hq","activeOpacity","inactiveOpacity","areTimelinesPlaying","areTimelinesEditing","screen","topRow","playIcon","editIcon","captureIcon","activeColor","console_Console","toggle","analogReadButton","analogWriteSlider","dial","onCaptureClick","onEditClick","onPlayClick","timelineConfig","trigger","moSelector","defaultUnit","active","timeline_Timeline","apVal","App","page","window","innerHeight","innerWidth","updateDimensions","addEventListener","content","components_hq","components_menu","choice","removeEventListener","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.04839071.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphContainer\":\"timeline_graphContainer__1X6eL\",\"canvas\":\"timeline_canvas__2m7N9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"menu_menu__8vnjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"toggle_container__3VUN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"analogWriteSlider_container__Us8ZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dial_container__1ZnML\"};","import Chart from 'chart.js'\r\nimport { drag } from 'd3-drag'\r\nimport { select, event } from 'd3-selection'\r\n\r\nlet element, scale, scaleX, type, stacked, initValue\r\n\r\nfunction getElement (chartInstance, callback) {\r\n  return () => {\r\n    if (event) {\r\n      const e = event.sourceEvent\r\n      const activeLine = chartInstance.options.activeLine\r\n      element = chartInstance.getElementsAtEvent(e)[activeLine]\r\n    //   element = chartInstance.getElementAtEvent(e)[0]\r\n    //   console.log(\"active line: \" + activeLine);\r\n    //   console.log(element);\r\n      type = chartInstance.config.type\r\n      let scaleName = type === 'radar' ? '_scale' : '_yScale'\r\n      if (element) {\r\n        if (chartInstance.data.datasets[element._datasetIndex].dragData === false || element[scaleName].options.dragData === false) {\r\n          element = null\r\n          return\r\n        }\r\n        \r\n        scale = element[scaleName].id\r\n        if (element._xScale) {\r\n          scaleX = element._xScale.id\r\n        }\r\n        \r\n        if (type === 'bar' || type === 'horizontalBar') {\r\n          stacked = chartInstance.config.options.scales.xAxes[0].stacked\r\n          let data = {}\r\n          let datasetIndex = element._datasetIndex\r\n          let index = element._index\r\n          let newPos = calcPosition(e,chartInstance,datasetIndex,index,data)\r\n          let curValue = chartInstance.data.datasets[datasetIndex].data[index]\r\n          initValue = newPos - curValue\r\n        }\r\n\r\n        if (typeof callback === 'function' && element) {\r\n          if ( callback(e, element) === false) {\r\n            element = null\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction roundValue(value, pos) {\r\n  if (!isNaN(pos)) {\r\n    return Math.round(value * Math.pow(10, pos))/Math.pow(10, pos)\r\n  }\r\n  return value\r\n}\r\n\r\nfunction calcRadar(e,chartInstance) {\r\n  let x,y,v\r\n  if (e.touches) {\r\n    x = e.touches[0].clientX-chartInstance.canvas.getBoundingClientRect().left\r\n    y = e.touches[0].clientY-chartInstance.canvas.getBoundingClientRect().top\r\n  } else {\r\n    x = e.clientX - chartInstance.canvas.getBoundingClientRect().left\r\n    y = e.clientY - chartInstance.canvas.getBoundingClientRect().top\r\n  }\r\n  let rScale = chartInstance.scales[scale]\r\n  let d = Math.sqrt(Math.pow(x-rScale.xCenter, 2) + Math.pow(y-rScale.yCenter, 2))\r\n  let scalingFactor = rScale.drawingArea / (rScale.max - rScale.min)\r\n  if (rScale.options.ticks.reverse) {\r\n    v = rScale.max - (d / scalingFactor)\r\n  } else {\r\n    v = rScale.min + (d / scalingFactor)\r\n  }\r\n\r\n  v = roundValue(v, chartInstance.options.dragDataRound)\r\n\r\n  v = v > chartInstance.scale.max ? chartInstance.scale.max : v\r\n  v = v < chartInstance.scale.min ? chartInstance.scale.min : v\r\n\r\n  return v\r\n}\r\n\r\nfunction calcPosition(e,chartInstance,datasetIndex,index,data) {\r\n  let x,y\r\n  if (e.touches) {\r\n    x = chartInstance.scales[scaleX].getValueForPixel(e.touches[0].clientX-chartInstance.canvas.getBoundingClientRect().left)\r\n    y = chartInstance.scales[scale].getValueForPixel(e.touches[0].clientY-chartInstance.canvas.getBoundingClientRect().top)\r\n  } else {\r\n    x = chartInstance.scales[scaleX].getValueForPixel(e.clientX - chartInstance.canvas.getBoundingClientRect().left)\r\n    y = chartInstance.scales[scale].getValueForPixel(e.clientY - chartInstance.canvas.getBoundingClientRect().top)\r\n  }\r\n\r\n  x = roundValue(x, chartInstance.options.dragDataRound)\r\n  y = roundValue(y, chartInstance.options.dragDataRound)\r\n\r\n  x = x > chartInstance.scales[scaleX].max ? chartInstance.scales[scaleX].max : x\r\n  x = x < chartInstance.scales[scaleX].min ? chartInstance.scales[scaleX].min : x\r\n\r\n  y = y > chartInstance.scales[scale].max ? chartInstance.scales[scale].max : y\r\n  y = y < chartInstance.scales[scale].min ? chartInstance.scales[scale].min : y\r\n\r\n  if(chartInstance.data.datasets[datasetIndex].data[index].x && chartInstance.options.dragX) {\r\n    data.x = x\r\n  }\r\n\r\n  if(chartInstance.data.datasets[datasetIndex].data[index].y) {\r\n    data.y = y\r\n    return data\r\n  } else {\r\n    if (type === 'horizontalBar') {\r\n      return x\r\n    } else {\r\n      return y\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateData (chartInstance, callback) {\r\n  return () => {\r\n    if (element && event) {\r\n      const e = event.sourceEvent\r\n      const datasetIndex = element._datasetIndex\r\n      const index = element._index\r\n      \r\n      let data = chartInstance.data.datasets[datasetIndex].data[index]\r\n\r\n      if (type === 'radar') {\r\n        data = calcRadar(e,chartInstance)\r\n      } else if (stacked) {\r\n        let cursorPos = calcPosition(e,chartInstance,datasetIndex,index,data)\r\n        data = cursorPos - initValue\r\n      } else {\r\n        data = calcPosition(e,chartInstance,datasetIndex,index,data)\r\n      }\r\n\r\n      if (typeof callback === 'function') {\r\n        if ( callback(e, datasetIndex, index, data) !== false) {\r\n          chartInstance.data.datasets[datasetIndex].data[index] = data\r\n          chartInstance.update(0)\r\n        }\r\n      } else {\r\n        chartInstance.data.datasets[datasetIndex].data[index] = data\r\n        chartInstance.update(0)\r\n      }\r\n    }  \r\n  }\r\n}\r\n\r\nfunction dragEndCallback (chartInstance, callback) {\r\n  return () => {\r\n    if (typeof callback === 'function' && element) {\r\n      const e = event.sourceEvent\r\n      const datasetIndex = element._datasetIndex\r\n      const index = element._index\r\n      const value = chartInstance.data.datasets[datasetIndex].data[index]\r\n      return callback(e,datasetIndex,index,value)\r\n    }\r\n  }\r\n}\r\n\r\nconst ChartJSdragDataPlugin = {\r\n  id: 'dragdata',\r\n  afterInit: function(chartInstance) {\r\n    if (chartInstance.options.dragData) {\r\n      select(chartInstance.chart.canvas).call(\r\n        drag().container(chartInstance.chart.canvas)\r\n          .on('start', getElement(chartInstance, chartInstance.options.onDragStart))\r\n          .on('drag', updateData(chartInstance, chartInstance.options.onDrag))\r\n          .on('end', dragEndCallback(chartInstance,chartInstance.options.onDragEnd))\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nChart.pluginService.register(ChartJSdragDataPlugin)\r\n\r\nexport default ChartJSdragDataPlugin","import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\nimport \"antd/dist/antd.css\";\r\nimport classes from './menu.module.css';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass AppMenu extends Component {\r\n  constructor() {\r\n    super();  \r\n    this.state = {\r\n      current: 'hq',\r\n    };\r\n  }\r\n\r\n  handleClick = e => {\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n    this.props.getChoice(e.key);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\" theme=\"dark\" className={classes.menu} >\r\n\r\n        <SubMenu\r\n          title={\r\n            <span className=\"submenu-title-wrapper\" style={{color: \"rgba(255, 255, 255, 0.6\"}}>\r\n              <Icon type=\"setting\" />\r\n              Mo Controls\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.ItemGroup>\r\n            <Menu.Item key=\"hq\">Unit HQ</Menu.Item>\r\n            {/* <Menu.Item key=\"live\">Live Motion</Menu.Item> */}\r\n            <Menu.Item key=\"about\">          \r\n              <a href=\"http://www.robotstack.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              About\r\n              </a>\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        {/* <Menu.Item key=\"website\">\r\n          <a href=\"http://www.robotstack.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            RobotStack\r\n          </a>\r\n        </Menu.Item> */}\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppMenu;\r\n","import React from 'react';\r\nimport { Pagination } from 'antd';\r\n// import './moSelector.less';\r\n\r\nclass MoSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeUnit: this.props.allUnits[0],\r\n            current: 1\r\n        };\r\n    };\r\n\r\n    itemRender(current, type, originalElement) {\r\n        const {allUnits, getColors} = this.props;\r\n        const {activeUnit} = this.state;\r\n        const idx = current-1;\r\n        const colors = getColors(allUnits, activeUnit, 1, 0.5);\r\n        // const {activeUnit} = this.state;\r\n        // const color = idx === allUnits.indexOf(activeUnit) ? colors[idx] : \"rgba(255, 255, 255, 0.65)\";\r\n        if (type === 'page') {\r\n            return <a alt={allUnits[idx]} style={{ color: colors[idx], fontSize: \".9em\", padding: \"0px\" }}>{allUnits[idx]}</a>\r\n        }\r\n        return originalElement;\r\n    }\r\n\r\n    onChange = (idx) => {\r\n        const {allUnits} = this.props;\r\n        const activeUnit = allUnits[idx-1];\r\n        this.setState({\r\n            activeUnit: activeUnit,\r\n            current: idx,\r\n        });\r\n        this.props.getActiveUnit(activeUnit);\r\n    };\r\n\r\n    render() {\r\n        const { allUnits } = this.props;\r\n        const { current } = this.state;\r\n        return <Pagination \r\n        current={current} \r\n        pageSize={1} \r\n        onChange={this.onChange} \r\n        total={allUnits.length} \r\n        size=\"small\" \r\n        showLessItems={true}\r\n        // showTitle=\"false\"\r\n        // hideOnSinglePage={true}\r\n        style={{ position: \"relative\", bottom: \"1px\" }}\r\n        itemRender={this.itemRender.bind(this)} />;\r\n    }\r\n}\r\n\r\nexport default MoSelector;\r\n","import React, { Component } from 'react';\r\nimport classes from './toggle.module.css';\r\nimport {Switch} from \"antd\";\r\n\r\nclass Toggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checked: false\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    const pinState = this.state.checked ? 1 : 0;    \r\n    fetch('/digitalwrite/' + this.props.pin + '/' + pinState + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));\r\n  };\r\n\r\n  onChange(isChecked) {\r\n    const pinState = isChecked ? 1 : 0;\r\n    fetch('/digitalwrite/' + this.props.pin + '/' + pinState + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));  \r\n    this.setState({\r\n      checked: isChecked\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.container} >\r\n        <Switch \r\n          onChange={this.onChange.bind(this)} \r\n          checked={this.state.checked}\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n      \r\n    );\r\n  };\r\n};\r\n\r\nexport default Toggle;\r\n","import React, { Component } from 'react';\r\nimport classes from './analogWriteSlider.module.css';\r\nimport {Slider} from \"antd\";\r\n\r\nclass AnalogWriteSlider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('/analogwrite/' + this.props.pin + '/' + this.state.value + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));\r\n  };\r\n\r\n  onChange(val) {\r\n    fetch('/analogwrite/' + this.props.pin + '/' + val + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => console.log(data));  \r\n    this.setState({\r\n      value: val\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={ classes.container }>\r\n        <Slider \r\n          vertical \r\n          max={255} \r\n          defaultValue={this.state.value}\r\n          onChange={this.onChange.bind(this)} \r\n        />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default AnalogWriteSlider;\r\n","import React, { Component } from 'react';\r\nimport classes from './analogReadButton.module.css';\r\nimport { Button } from \"antd\";\r\n\r\nclass AnalogReadButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"click\"\r\n    };\r\n  };\r\n\r\n  onClick() {\r\n    fetch('/analogread/' + this.props.pin + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => { \r\n        console.log(data);\r\n        if(data.reply){\r\n          this.setState({ value: data.reply.params });\r\n        }\r\n      });  \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.container}>\r\n        <Button \r\n          size=\"small\" \r\n          onClick={this.onClick.bind(this)}\r\n          className={classes.buttonUnit}\r\n          >\r\n          <span className={classes.budge}>{this.state.value}</span>\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default AnalogReadButton;\r\n","import React, { Component } from 'react';\r\nimport classes from \"./dial.module.css\";\r\n// import socketIOClient from \"socket.io-client\";\r\nimport { CircularInput, CircularTrack, CircularProgress, CircularThumb } from 'react-circular-input'\r\n// import { Button, Icon } from 'antd';\r\n// const hiBlue = \"rgb(61, 153, 255)\";\r\n// const midGray = \"rgba(255, 255, 255, 0.45)\"\r\nconst hiGray = \"rgba(255, 255, 255, 0.65)\"\r\nconst loGray = \"rgba(255, 255, 255, 0.2)\"\r\n\r\nclass Dial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rotations: 0,\r\n      dialPos: 0,\r\n      lastDialVal: 0,\r\n      motiPos: 0,\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMotiPos();\r\n    setInterval( this.getMotiPos, 250 ); \r\n  };\r\n\r\n  getMotiPos = () => (fetch('/get/R_PRESENT_POSITION/1/' + this.props.unitId + '/')\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    if (data.reply.params) {\r\n      const motiPos = data.reply.params[0] / this.props.steps;\r\n      if (motiPos !== null && isNaN(motiPos) === false) {\r\n        this.setState({ motiPos: motiPos });\r\n      }\r\n    }\r\n  })).catch(err => console.log(err))\r\n\r\n  getRangeValue(val) {\r\n    const rangeValue = Math.round(val * 360);\r\n    return rangeValue;\r\n  }\r\n\r\n  checkRollover(val) {\r\n    let rollover = 0;\r\n    const thresh = .8;\r\n    const lastDialVal = this.state.lastDialVal;\r\n    if (val < (lastDialVal - thresh)) {\r\n      rollover = 1;\r\n    }\r\n    else if (val > (lastDialVal + thresh)) {\r\n      rollover = -1;\r\n    }\r\n    return rollover;\r\n  }\r\n\r\n  moveIt() {\r\n    let destination = this.state.dialPos * this.props.steps;\r\n    fetch('/rotateTo/' + destination + '/' + this.props.speed + '/' + this.props.unitId + '/')\r\n      .then(res => res.json()).then(data => {\r\n        console.log(data);\r\n      });\r\n  }\r\n\r\n  changeValue(val) {\r\n    if (this.props.capture) {\r\n      // ignore user input if capturing with motor \r\n    }\r\n    else {\r\n      const rotations = this.state.rotations + this.checkRollover(val);\r\n      const dialPos = (val + rotations);\r\n      this.setState({\r\n        lastDialVal: val,\r\n        rotations: rotations,\r\n        dialPos: dialPos,\r\n      });\r\n      this.props.getDialPos(dialPos);\r\n      this.moveIt();\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const {incomingVal, capture, getDialPos} = this.props;\r\n    const {motiPos, dialPos} = this.state;\r\n    if (incomingVal !== null && incomingVal !== prevProps.incomingVal) {\r\n      this.setState({\r\n        dialPos: incomingVal,\r\n        lastIncomingVal: incomingVal\r\n      });\r\n      if (capture == false) {\r\n        // ignore dial input if capturing from motor \r\n        this.moveIt();\r\n      }\r\n    }\r\n    if(capture && motiPos !== prevState.motiPos) {\r\n      this.setState({\r\n        dialPos: motiPos,\r\n        lastDialVal: motiPos,\r\n      })\r\n    }\r\n    if(dialPos !== prevState.dialPos) {\r\n      getDialPos((motiPos));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { motiPos, dialPos } = this.state;\r\n    // const dialPos = capture ? motiPos : this.state.dialPos;\r\n    let dialPos360 = this.getRangeValue(dialPos);\r\n    let motiPos360 = this.getRangeValue(motiPos);\r\n    const { radius, capture } = this.props;\r\n    const topText = capture ? \"(\" + motiPos360 + \"°)\" : dialPos360 + \"° \";\r\n    const subText = capture ? \"\" : \"(\" + motiPos360 + \"°)\";\r\n    return (\r\n      <div className={classes.container}>\r\n        <CircularInput onChange={this.changeValue.bind(this)} value={dialPos} radius={radius}>\r\n          <CircularTrack strokeWidth={4} stroke={loGray} />\r\n          <CircularProgress strokeWidth={0} stroke={loGray} />\r\n          <CircularThumb strokeWidth={1} stroke={loGray} fill={hiGray} r={10} />\r\n          {/* range value in center */}\r\n          <text x={radius} y={radius} textAnchor=\"middle\" dy=\"0.3em\" fill={hiGray}>\r\n            {topText}\r\n          </text>\r\n          <text x={radius} y={radius + 16} textAnchor=\"middle\" fontSize=\"10px\" fill={loGray}>\r\n            {subText}\r\n          </text>\r\n        </CircularInput>\r\n        <br />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Dial;\r\n","import React, { Component } from 'react'\r\nimport Chart from \"chart.js\";\r\n// chartjs-plugin-dragdata requires full path??\r\n// import 'chartjs-plugin-dragdata/dist/chartjs-plugin-dragdata.min.js';\r\nimport '../dragData';           // custom dragData module  \r\nimport classes from \"./timeline.module.css\";\r\nimport { Row } from 'antd';\r\nimport \"./pointColors.less\";\r\n\r\nlet dragDisabled = true;\r\n// const hiBlue = \"rgb(61, 153, 255)\";\r\n// const loBlue = \"rgba(61, 153, 255, 0.65)\";\r\n// const hiGray = \"rgba(255, 255, 255, 0.65)\"\r\nconst midGray = \"rgba(255, 255, 255, 0.45)\"\r\nconst loGray = \"rgba(255, 255, 255, 0.2)\"\r\n\r\nexport default class Timeline extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.chartRef = React.createRef();\r\n        this.state = {\r\n            \"numPoints\": 10,\r\n            \"activePoint\": 0,\r\n            \"activePointVal\": null,\r\n            \"interval\": 2000,\r\n            \"intervalId\": null,\r\n            \"play\": false,\r\n            \"edit\": false,\r\n        }\r\n        this.saveDatasets.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {numPoints, interval} = this.state;\r\n        const xLabels = Array.from({ length: numPoints }, (e, i) => (i * interval/1000).toFixed(2));\r\n        const chartlines = this.createChartLines();\r\n        const isActiveDataset = (datasetIndex) => {\r\n            const {allUnits, activeUnit} = this.props;\r\n            let isActiveDataset = false;\r\n            if(datasetIndex === allUnits.indexOf(activeUnit)) {\r\n                isActiveDataset = true;\r\n            }\r\n            return isActiveDataset;\r\n        }\r\n        const refToSetActivePoint = (idx) => this.setActivePoint(idx);\r\n        const refToSetActivePointValue = (val) => {\r\n            this.setState({ activePointVal: val });\r\n            this.props.getActivePointVal(val);\r\n        }\r\n        const chartConfig = {\r\n            type: \"line\",\r\n            data: {\r\n                labels: xLabels,\r\n                datasets: chartlines,\r\n                backgroundColor: \"rgba(0,0,0,0)\",\r\n            },\r\n            options: {\r\n                //Customize chart options\r\n                dragData: true,\r\n                dragX: false,\r\n                dragDataRound: 0, \r\n                activeLine: 0,\r\n                onDragStart: function (e, element) {\r\n                    const idx = element._index;  \r\n                    refToSetActivePoint(idx);\r\n                    if (dragDisabled || !isActiveDataset(element._datasetIndex)) return false\r\n                },\r\n                onDrag: function (e, datasetIndex, index, value) {\r\n                    if(isActiveDataset(datasetIndex)) {\r\n                        refToSetActivePoint(index);                    \r\n                        refToSetActivePointValue(value / 360);\r\n\r\n                    }\r\n                },\r\n                onDragEnd: function (e, datasetIndex, index, value) {\r\n                    if(isActiveDataset(datasetIndex)) {\r\n                        refToSetActivePoint(index);                    \r\n                        refToSetActivePointValue(value / 360);\r\n                    }\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: \"degrees\",\r\n                            fontColor: midGray,\r\n                            padding: 0,\r\n                        },\r\n                        ticks: {\r\n                            stepSize: 360,\r\n                            suggestedMax: 360*3,\r\n                            suggestedMin: -360*3,\r\n                            padding: 0,\r\n                            fontColor: midGray,\r\n                            fontSize: 11,\r\n                        },\r\n                        gridLines: {\r\n                            // display: false,\r\n                            color: loGray,\r\n                        },\r\n                    }],\r\n                    xAxes: [{\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: \"seconds\",\r\n                            fontColor: midGray,\r\n                        },\r\n                        ticks: {\r\n                            fontColor: midGray,\r\n                            fontSize: 11,                            \r\n                        },\r\n                        gridLines: {\r\n                            // display: false,\r\n                            color: loGray,\r\n                        },\r\n                    }],\r\n                },\r\n                animation: {\r\n                    duration: this.state.interval / 2\r\n                },\r\n                legend: {\r\n                    display: false,\r\n                    labels: {\r\n                        boxWidth: 0,\r\n                    }\r\n                },\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                tooltips: {\r\n                    mode: \"nearest\",\r\n                    intersect: true,\r\n                    // axis: \"x\"\r\n                },\r\n                hover: {\r\n                    mode: \"nearest\",\r\n                    intersect: true,\r\n                    // axis: \"x\"\r\n                },\r\n                // onClick: (e, item) => console.log(\"onClick: \" + item[0]._datasetIndex),\r\n                layout: {\r\n                    padding: {\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0\r\n                    }\r\n                },\r\n            }\r\n        }\r\n        this.myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        this.myChart = new Chart(this.myChartRef, chartConfig);\r\n        this.pause();\r\n        this.lock();     \r\n        setInterval(this.saveDatasets, 10000);\r\n    }\r\n\r\n    setPointsRadii(numPoints, activePoint) {\r\n        return Array.from({ length: numPoints }, (e, i) => i === activePoint ? 8 : 4);\r\n    }\r\n\r\n    createChartLines() {\r\n        let datasets = JSON.parse(localStorage.getItem(\"storedDatasets\"));\r\n        if(!datasets) {\r\n            datasets = this.clearDatasets();\r\n        }\r\n        return datasets\r\n    }\r\n\r\n    saveDatasets = () => {\r\n        try {\r\n            let datasetsToSave = [];\r\n            this.myChart.data.datasets.forEach((dataset, idx) => {\r\n                datasetsToSave[idx] = {...dataset};\r\n                delete datasetsToSave[idx][\"_meta\"];\r\n                datasetsToSave[idx].data = [...dataset.data];\r\n            });\r\n            localStorage.removeItem(\"storedDatasets\");\r\n            localStorage.setItem(\"storedDatasets\", JSON.stringify(datasetsToSave));\r\n        }\r\n        catch {\r\n            console.log(\"failed save\");\r\n        }\r\n    }\r\n\r\n    clearDatasets = () => {\r\n        const {allUnits, colors} = this.props;\r\n        const {numPoints} = this.state;\r\n        const datasets = allUnits.map( (id, idx) => {\r\n            const data = new Array(numPoints).fill(idx * 90);\r\n            const pointColors = new Array(numPoints).fill(colors[idx]);  \r\n            return {\r\n                id: id,\r\n                label: \"MO\" + id,\r\n                data: data,\r\n                pointBackgroundColor: pointColors,\r\n                pointRadius: this.setPointsRadii(numPoints, 0),\r\n                radius: 4,\r\n                pointHitRadius: 25,\r\n                pointHoverRadius: 8,\r\n                pointHoverColor: \"#FFF\",\r\n                borderColor: colors[idx],\r\n                borderWidth: 1,\r\n                fill: false,\r\n            }\r\n        });\r\n        console.log(\"new datasets\");\r\n        this.saveDatasets();\r\n        return datasets;\r\n    }\r\n\r\n    nextActivePoint() {\r\n        const {allUnits, activeUnit} = this.props;\r\n        const activeSetIndex = allUnits.indexOf(activeUnit);\r\n        const numPoints = this.myChart.data.datasets[activeSetIndex].data.length;\r\n        let idx = (this.state.activePoint + 1) >= numPoints ? 0 : this.state.activePoint + 1;\r\n        this.setActivePoint(idx);\r\n    }\r\n\r\n    moveIt(destination, unitId) {\r\n        if(this.state.play) {\r\n            fetch('/rotateTo/' + destination + '/' + 255 + '/' + unitId + '/' )\r\n                .then(res => res.json()).then(data => { \r\n                  console.log(data);\r\n                });           \r\n        }\r\n    }\r\n\r\n    setActivePoint(pointIndex) {\r\n        this.setState({ activePoint: pointIndex });\r\n        const {allUnits} = this.props;\r\n        const {numPoints} = this.state;\r\n        // const activeSetIndex = allUnits.indexOf(activeUnit);\r\n        this.myChart.data.datasets.forEach( ds => {ds.pointRadius = this.setPointsRadii(numPoints, pointIndex)});\r\n        this.myChart.update(); \r\n        allUnits.forEach( (unitId, unitIndex) => {\r\n            const destination = this.myChart.data.datasets[unitIndex].data[pointIndex] / 360 * this.props.steps;\r\n            this.moveIt(destination, unitId);\r\n        });\r\n        // this.moveIt(destination, activeUnit);\r\n    }\r\n\r\n    edit() {\r\n        // console.log(\"edit\");\r\n        this.pause();\r\n        this.setState({ edit: true });\r\n        this.setActivePoint(0);\r\n        dragDisabled = false;\r\n    }\r\n\r\n    lock() {\r\n        // console.log(\"lock\");\r\n        this.setState({ edit: false });\r\n        dragDisabled = true;\r\n    }    \r\n\r\n    play() {\r\n        // console.log(\"play\");\r\n        this.lock();\r\n        this.setState({ play: true });\r\n        const intervalId = setInterval(() => this.nextActivePoint(), this.state.interval);\r\n        this.setState({ intervalId: intervalId });\r\n    }\r\n\r\n    pause() {\r\n        // console.log(\"pause\");\r\n        this.setState({ play: false });\r\n        const intervalId = this.state.intervalId;\r\n        if(intervalId){\r\n            clearInterval(intervalId);\r\n        }\r\n        this.setState({ intervalId: null });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const {makePlay, makeEdit, makeSave, makeClear, allUnits, activeUnit, inPointVal, colors} = this.props;\r\n        const activeSetIndex = allUnits.indexOf(activeUnit);\r\n        if(makePlay !== prevProps.makePlay) {\r\n            makePlay ? this.play() : this.pause();        \r\n        }\r\n        if(makeEdit !== prevProps.makeEdit) {\r\n            makeEdit ? this.edit() : this.lock();        \r\n        }\r\n        if(makeSave !== prevProps.makeSave) {\r\n            this.saveDatasets();\r\n        }\r\n        if(makeClear !== prevProps.makeClear) {\r\n            this.myChart.data.datasets = this.clearDatasets();\r\n            this.myChart.update();   \r\n            this.saveDatasets();\r\n        }\r\n        if(inPointVal != null && inPointVal !== prevProps.inPointVal) {\r\n            if(makeEdit) {\r\n                const {activePoint} = this.state;\r\n                this.myChart.data.datasets[activeSetIndex].data[activePoint] = inPointVal * 360;\r\n                this.myChart.update();    \r\n                this.setState({ activePointVal: inPointVal });\r\n            }      \r\n        } \r\n        if(activeUnit !== prevProps.activeUnit) {\r\n            const idx = allUnits.indexOf(activeUnit);\r\n            this.myChart.options.activeLine = idx;\r\n            // console.log(\"new active: \" + idx);\r\n        }\r\n        if(colors !== prevProps.colors) {\r\n            const {numPoints} = this.state;\r\n            this.myChart.data.datasets.forEach( (dataset, idx) => {\r\n                const pointColors = new Array(numPoints).fill(colors[idx]);  \r\n                dataset.pointBackgroundColor = pointColors;\r\n                dataset.borderColor = colors[idx];\r\n            });\r\n            this.myChart.update();\r\n        }\r\n    }\r\n\r\n    render() {       \r\n        return (\r\n            <div className={classes.graphContainer}>\r\n                <Row type=\"flex\" justify=\"start\" align=\"top\">\r\n                    <canvas\r\n                        height=\"200px\"\r\n                        id=\"myChart\"\r\n                        ref={this.chartRef}\r\n                        className={classes.canvas}\r\n                    />\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, Button } from 'antd';\r\n\r\nclass TimelineConfig extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            visible: false,\r\n        };\r\n    }\r\n        \r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(undefined)\r\n    }\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {saveTrigger, clearTrigger} = this.props;\r\n        // const saveTrigger = this.props.saveTrigger + 1;\r\n        // const clearTrigger = this.props.clearTrigger + 1;\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    title=\"Timeline Settings\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <Button type=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => this.props.getSaveTrigger(saveTrigger + 1)}\r\n                        // className=\"HQtimelineButtonUnit\"\r\n                    >\r\n                        save\r\n                        {/* <Icon type=\"setting\" className=\"HQbuttonText\" /> */}\r\n                    </Button>\r\n                    &nbsp;\r\n                    <Button type=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={() => this.props.getClearTrigger(clearTrigger + 1)}\r\n                        // onClick={() => { }}\r\n                        // className=\"HQtimelineButtonUnit\"\r\n                    >\r\n                        clear\r\n                        {/* <Icon type=\"setting\" className=\"HQbuttonText\" /> */}\r\n                    </Button>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TimelineConfig;\r\n","import React from 'react'\r\nimport Terminal from 'react-console-emulator'\r\n\r\n\r\nconst globalStyle = {\r\n    style: {\r\n        background: \"rgba(0, 0, 0, 0.65)\",\r\n        width: \"100%\",\r\n        height: \"240px\",\r\n        minHeight: \"190px\",\r\n        minWidth: \"250px\"\r\n    },\r\n    contentStyle: {\r\n        color: \"rgba(255, 255, 255, 0.5)\"\r\n    },\r\n    inputStyle: {\r\n        color: \"rgba(255, 255, 255, 0.5)\",\r\n        position: \"relative\",\r\n        top: \"3px\"\r\n\r\n    },\r\n    promptLabelStyle: {\r\n        color: \"rgba(238, 156, 52, 0.75)\"      \r\n    }\r\n}\r\n\r\nexport default class Console extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.terminal = React.createRef()\r\n  }\r\n\r\n  commands = {\r\n    echo: {\r\n      description: 'Echo a passed string.',\r\n      usage: 'echo <string>',\r\n      fn: function () {\r\n        return `${Array.from(arguments).join(' ')}`\r\n      }\r\n    },\r\n    man: {\r\n      description: 'Manual of mo commands.',\r\n      usage: 'man',\r\n      fn: () => {\r\n        return `the console feature is in development, try again soon.`\r\n      }\r\n    },\r\n    digitalWrite: {\r\n      description: 'Write a high or low value to a pin.',\r\n      usage: 'digitalWrite(<pin>, <value>, <unitId>)',\r\n      fn: (pin, val, unitId) => {\r\n        let reply;\r\n        fetch('/digitalwrite/' + pin + '/' + val + '/' + unitId + '/')\r\n        .then(res => res.json()).then(data => reply = data);  \r\n        return reply\r\n      }\r\n    },\r\n    wait: {\r\n      description: 'Waits one second and sends a message.',\r\n      usage: 'wait',      \r\n      fn: () => {\r\n        const terminal = this.terminal.current\r\n        setTimeout(() => terminal.pushToStdout('Hello after 1 second!'), 1500)\r\n        return 'Running, please wait...'\r\n      }\r\n    }\r\n  }  \r\n    \r\n  render () {\r\n    return (\r\n      <Terminal\r\n        ref={this.terminal} // Assign ref to the terminal here\r\n        commands={this.commands}\r\n        welcomeMessage={'type \"man\" for commands'}\r\n        promptLabel={'mo>'}\r\n        {...globalStyle}\r\n        />\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport MoSelector from './moSelector';\r\nimport Toggle from './toggle';\r\nimport AnalogWriteSlider from './analogWriteSlider';\r\nimport AnalogReadButton from './analogReadButton'\r\nimport Dial from \"./dial\";\r\nimport Timeline from \"./timeline\";\r\nimport TimelineConfig from \"./timelineConfig\";\r\nimport { Row, Button, Icon } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport './hq.less';\r\nimport Console from './console';\r\n\r\n// const hiGray = \"rgba(255, 255, 255, 0.65)\"\r\n\r\nclass Hq extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeUnit: 1,\r\n      capture: false,\r\n      dialPos: 0,\r\n      activePointVal: null,\r\n      areTimelinesPlaying: false,\r\n      areTimelinesEditing: false,\r\n      saveTrigger: false,\r\n      clearTrigger: false,\r\n      colors: this.getColors(this.props.allUnits, 1)\r\n    };\r\n  }\r\n\r\n  getColors = (allUnits, activeUnit, activeOpacity = 1, inactiveOpacity = 0.2) => {\r\n    let colors = allUnits.map((id, idx) => {\r\n      const opacity = id === activeUnit ? activeOpacity : inactiveOpacity;\r\n      return \"hsla(\" + ((idx) * 56 + 0) % 360 + \", 100%, 70%, \" + opacity + \")\";\r\n    });\r\n    // console.log(colors);\r\n    return colors;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { allUnits, screen } = this.props;\r\n    const { activeUnit } = this.state;\r\n    if (allUnits !== prevProps.allUnits || activeUnit !== prevState.activeUnit) {\r\n      const colors = this.getColors(allUnits, activeUnit);\r\n      this.setState({ colors: colors });\r\n    }\r\n    if (screen !== prevProps.screen) {\r\n      // console.log(\"width = \" + screen.width + \", height = \" + screen.height);\r\n    }\r\n  }\r\n\r\n  onCaptureClick() {\r\n    const capture = !this.state.capture;\r\n    this.setState({ capture: capture });\r\n    if (capture) {\r\n      // console.log(\"idle\");\r\n      fetch('/rotate/0/0/' + this.state.activeUnit + '/')\r\n        .then(res => res.json()).then(data => {\r\n          // console.log(data);\r\n        });\r\n    }\r\n  }\r\n\r\n  onPlayClick() {\r\n    this.setState({ areTimelinesPlaying: !this.state.areTimelinesPlaying });\r\n  }\r\n\r\n  onEditClick() {\r\n    this.setState({ areTimelinesEditing: !this.state.areTimelinesEditing });\r\n  }\r\n\r\n  render() {\r\n    const { activeUnit, colors } = this.state;\r\n    const { allUnits, screen } = this.props;\r\n    const playState = this.state.areTimelinesPlaying;\r\n    let playIcon = playState === false ? \"play-circle\" : \"pause-circle\";\r\n    const editState = this.state.areTimelinesEditing;\r\n    let editIcon = editState === false ? \"edit\" : \"lock\";\r\n    const captureIcon = this.state.capture ? \"vertical-align-top\" : \"vertical-align-bottom\";\r\n    const activeColor = colors[allUnits.indexOf(activeUnit)];\r\n    let topRow;\r\n    if (screen) {\r\n      let console;\r\n      if (screen.width > 600) {\r\n        console = <div className=\"HQconsole\">\r\n          <Console />\r\n        </div>\r\n      }      \r\n      if (screen.height > 300) {\r\n        topRow =\r\n          <div className=\"HQtopContainer\">\r\n            {console}\r\n            <div className=\"HQcontrols\">\r\n              <div className=\"HQpinBox\">\r\n                <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                  <div className=\"HQpinUnit\">\r\n                    p10 <Toggle unitId={activeUnit} pin={10} />\r\n                  </div>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                  <div className=\"HQpinUnit\">\r\n                    p11 <Toggle unitId={activeUnit} pin={11} />\r\n                  </div>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                  <div className=\"HQpinUnit\">\r\n                    p12 <Toggle unitId={activeUnit} pin={12} />\r\n                  </div>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                  <div className=\"HQpinUnit\">\r\n                    p13 <Toggle unitId={activeUnit} pin={13} />\r\n                  </div>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                  <div className=\"HQpinUnit\">\r\n                    a3 <AnalogReadButton unitId={activeUnit} pin={17} />\r\n                  </div>\r\n                </Row>\r\n                <Row type=\"flex\" justify=\"start\" align=\"middle\" >\r\n                  <div className=\"HQpinUnit\">\r\n                    a4 <AnalogReadButton unitId={activeUnit} pin={18} />\r\n                  </div>\r\n                </Row>\r\n              </div>\r\n              <div className=\"HQvSliderBox\" >\r\n                <div className=\"HQvSliderUnit\">\r\n                  <AnalogWriteSlider unitId={activeUnit} pin={14} />\r\n                  <br />\r\n                  <span className=\"HQvSliderTitle\">a0</span>\r\n                </div>\r\n                <div className=\"HQvSliderUnit\">\r\n                  <AnalogWriteSlider unitId={activeUnit} pin={15} />\r\n                  <br />\r\n                  <span className=\"HQvSliderTitle\">a1</span>\r\n                </div>\r\n                <div className=\"HQvSliderUnit\">\r\n                  <AnalogWriteSlider unitId={activeUnit} pin={16} />\r\n                  <br />\r\n                  <span className=\"HQvSliderTitle\">a2</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"HQdialBox\">\r\n                <Dial\r\n                  unitId={activeUnit}\r\n                  steps={this.props.steps}\r\n                  radius={50}\r\n                  speed={255}\r\n                  capture={this.state.capture}\r\n                  getDialPos={(dialPos) => this.setState({ dialPos: dialPos })}\r\n                  incomingVal={this.state.activePointVal}\r\n                  />\r\n                <Button type=\"link\"\r\n                  onClick={this.onCaptureClick.bind(this)}\r\n                  className=\"HQcaptureIconUnit\"\r\n                  >\r\n                  <Icon type={captureIcon} className=\"HQcaptureButtonText\" style={{ color: activeColor }} />\r\n                </Button>\r\n                <span className=\"HQpageTitle\">MO:{activeUnit}</span>\r\n              </div>\r\n            </div>\r\n            {/* </Row> */}\r\n          </div>\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"HQcontainer\">\r\n        {topRow}\r\n        <Row type=\"flex\" justify=\"start\" align=\"top\">\r\n          <div className=\"HQtimelineBox\">\r\n            <div className=\"HQtimelineButtonRow\">\r\n              <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n                <div className=\"HQtimelineButtonBox\">\r\n                  <Button type=\"link\"\r\n                    onClick={this.onEditClick.bind(this)}\r\n                    className=\"HQtimelineButtonUnit\"\r\n                  >\r\n                    <Icon type={editIcon} className=\"HQbuttonText\" />\r\n                  </Button>\r\n                  <Button type=\"link\"\r\n                    onClick={this.onPlayClick.bind(this)}\r\n                    className=\"HQtimelineButtonUnit\"\r\n                  >\r\n                    <Icon type={playIcon} className=\"HQbuttonText\" />\r\n                  </Button>\r\n                  <Button type=\"link\"\r\n                    onClick={() => { this.TimelineConfig.showModal() }}\r\n                    className=\"HQtimelineButtonUnit\"\r\n                  >\r\n                    <Icon type=\"setting\" className=\"HQbuttonText\" />\r\n                  </Button>\r\n                  <TimelineConfig onRef={ref => (this.TimelineConfig = ref)}\r\n                    saveTrigger={this.state.saveTrigger}\r\n                    clearTrigger={this.state.clearTrigger}\r\n                    getSaveTrigger={(trigger) => this.setState({ saveTrigger: trigger })}\r\n                    getClearTrigger={(trigger) => this.setState({ clearTrigger: trigger })}\r\n                  />\r\n                </div>\r\n                <div className=\"HQmoSelector\">\r\n                  {/* <Button type=\"link\"\r\n                    // onClick={this.onEditClick.bind(this)}\r\n                    className=\"HQtimelineButtonUnit\"\r\n                    >\r\n                    <Icon type=\"sync\" className=\"HQbuttonText\" />\r\n                  </Button> */}\r\n                  <MoSelector\r\n                    defaultUnit={activeUnit}\r\n                    allUnits={allUnits}\r\n                    getActiveUnit={(active) => this.setState({ activeUnit: active })}\r\n                    getColors={this.getColors}\r\n                  // style={{ display: inline }}\r\n                  />\r\n                </div>\r\n              </Row>\r\n            </div>\r\n            <Row type=\"flex\" justify=\"start\" align=\"bottom\">\r\n              <Timeline\r\n                activeUnit={activeUnit}\r\n                allUnits={allUnits}\r\n                steps={this.props.steps}\r\n                capture={this.state.capture}\r\n                getActivePointVal={(apVal) => this.setState({ activePointVal: apVal })}\r\n                inPointVal={this.state.dialPos}\r\n                makePlay={this.state.areTimelinesPlaying}\r\n                makeEdit={this.state.areTimelinesEditing}\r\n                makeClear={this.state.clearTrigger}\r\n                makeSave={this.state.saveTrigger}\r\n                colors={colors}\r\n              />\r\n            </Row>\r\n          </div>\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Hq;\r\n","import React, { Component } from 'react';\r\nimport './App.less';\r\nimport AppMenu from './components/menu';\r\nimport Hq from './components/hq';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      page: \"hq\",\r\n      height: window.innerHeight, \r\n      width: window.innerWidth,\r\n      steps: 4096,\r\n    };\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n    this.updateDimensions();\r\n  }\r\n\r\n  updateDimensions() {\r\n    this.setState({\r\n      screen: {\r\n        height: window.innerHeight, \r\n        width: window.innerWidth\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {page, screen} = this.state;\r\n    let content;\r\n    if(page === \"hq\") {\r\n      content =           \r\n        <Hq className=\"APhq\" unitId={2} allUnits={[1, 2, 3, 6, 8, 11, 14, 15, 19, 22, 24, 25]} screen={screen} steps={this.state.steps} />\r\n    }\r\n    else if(page === \"timelines\") {\r\n      content = \r\n        <div className=\"APtimelineContainer\">\r\n        </div>\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"APmenu\">\r\n          <AppMenu getChoice={ (choice) => this.setState({ page: choice }) } />\r\n        </div>\r\n        <div className=\"APoffset\"></div>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }  \r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.less';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"analogReadButton_container__2IL9P\",\"buttonUnit\":\"analogReadButton_buttonUnit__314xk\",\"budge\":\"analogReadButton_budge__MA_4C\"};"],"sourceRoot":""}